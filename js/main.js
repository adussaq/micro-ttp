let buildDIFFS;

let globalTypes = {};

(function() {
	'use strict';

	console.log("WELCOME");

	// 0: "False Positive"
	const FP = 0;
	// 1: "Collection Year"
	const CY = 1;
	// 2: "Randomized Collect Time"
	const CT = 2;
	// 3: "Positive/Negative"
	const PN = 3;
	// 4: ['Organism Name']
	const ON = 4;
	// 5: ["Test Name"]
	const TN = 5;
	// 6: "Test Positivity Date/Time"
	// 7: "Hours to positivity"
	const HP = 7;


	// 0: "False Positive"
	// 1: "Collection Year"
	// 2: "Randomized Collect Time"
	// 3: "Positive/Negative"
	// 4: ['Organism Name']
	// 5: Array(3)
		// 0: ['Test Name']
		// 1: "Test Positivity Date/Time"
		// 2: "Hours to positivity"
	const EXTRA = 5;
	const EXTRA_HP = 2;


	let DIFFS = {"same":{"BETA STREPTOCOCCUS SPECIES":{"STREPTOCOCCUS PYOGENES (GROUP A)":"STREPTOCOCCUS PYOGENES (GROUP A)","STREPTOCOCCUS AGALACTIAE (GROUP B)":"STREPTOCOCCUS AGALACTIAE (GROUP B)","GRAM POSITIVE COCCI":"BETA STREPTOCOCCUS SPECIES","STREPTOCOCCUS DYSGALACTIAE":"STREPTOCOCCUS DYSGALACTIAE"},"ORGANISMS":{"STREPTOCOCCUS SALIVARIUS GROUP":"STREPTOCOCCUS SALIVARIUS GROUP"},"ESCHERICHIA COLI":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"ESCHERICHIA COLI","GRAM NEGATIVE RODS":"ESCHERICHIA COLI","ESCHERICHIA COLI (CARBAPENEM RESISTANT)":"ESCHERICHIA COLI (CARBAPENEM RESISTANT)"},"ENTEROCOCCUS FAECIUM":{"ENTEROCOCCUS SPECIES":"ENTEROCOCCUS FAECIUM","GRAM POSITIVE COCCI":"ENTEROCOCCUS FAECIUM"},"GRAM POSITIVE COCCI":{"STREPTOCOCCUS AGALACTIAE (GROUP B)":"STREPTOCOCCUS AGALACTIAE (GROUP B)","STREPTOCOCCUS PNEUMONIAE":"STREPTOCOCCUS PNEUMONIAE","STAPHYLOCOCCUS AUREUS":"STAPHYLOCOCCUS AUREUS","STREPTOCOCCUS MITIS GROUP":"STREPTOCOCCUS MITIS GROUP","STREPTOCOCCUS SALIVARIUS GROUP":"STREPTOCOCCUS SALIVARIUS GROUP","STREPTOCOCCUS BOVIS GP.":"STREPTOCOCCUS BOVIS GP.","STREPTOCOCCUS GALLOLYTICUS SUBSP. PASTEURIANUS":"STREPTOCOCCUS GALLOLYTICUS SUBSP. PASTEURIANUS","STREPTOCOCCUS GORDONII":"STREPTOCOCCUS GORDONII","STAPH AUREUS {MRSA}":"STAPH AUREUS {MRSA}","STREPTOCOCCUS DYSGALACTIAE":"STREPTOCOCCUS DYSGALACTIAE","STREPTOCOCCUS GALLOLYTICUS":"STREPTOCOCCUS GALLOLYTICUS","STREPTOCOCCUS MUTANS GROUP":"STREPTOCOCCUS MUTANS GROUP","VIRIDANS GROUP STREPTOCOCCI":"VIRIDANS GROUP STREPTOCOCCI","ROTHIA MUCILAGINOSA":"ROTHIA MUCILAGINOSA","STREPTOCOCCUS PYOGENES (GROUP A)":"STREPTOCOCCUS PYOGENES (GROUP A)","STREPTOCOCCUS PARASANGUINIS":"STREPTOCOCCUS PARASANGUINIS","ORGANISMS":"GRAM POSITIVE COCCI","KOCURIA":"KOCURIA","STREPTOCOCCUS ANGINOSUS GROUP":"STREPTOCOCCUS ANGINOSUS GROUP","STAPHYLOCOCCUS SPECIES -NOT STAPH. AUREUS":"STAPHYLOCOCCUS SPECIES -NOT STAPH. AUREUS","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC","STREPTOCOCCUS SPECIES":"STREPTOCOCCUS SPECIES","STREPTOCOCCUS SANGUINIS":"STREPTOCOCCUS SANGUINIS","STAPHYLOCOCCUS LUGDUNENSIS":"STAPHYLOCOCCUS LUGDUNENSIS","LACTOCOCCUS SPECIES":"LACTOCOCCUS SPECIES","STREPTOCOCCUS GALLOLYTICUS SUBSP. GALLOLYTICUS":"STREPTOCOCCUS GALLOLYTICUS SUBSP. GALLOLYTICUS","ENTEROBACTER AEROGENES":"ENTEROBACTER AEROGENES","MICROCOCCUS SPECIES":"MICROCOCCUS SPECIES","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE","STAPH AUREUS(COLONY VARIANT - SMALL COLONY OR OTHER MORPHOTYPE)":"STAPH AUREUS(COLONY VARIANT - SMALL COLONY OR OTHER MORPHOTYPE)","ROTHIA DENTOCARIOSA":"ROTHIA DENTOCARIOSA"},"GRAM NEGATIVE RODS":{"KLEBSIELLA PNEUMONIAE":"KLEBSIELLA PNEUMONIAE","SALMONELLA ENTERICA":"SALMONELLA ENTERICA","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"LACTOSE FERMENTING GRAM NEGATIVE RODS","PSEUDOMONAS AERUGINOSA":"PSEUDOMONAS AERUGINOSA","PASTEURELLA MULTOCIDA":"PASTEURELLA MULTOCIDA","PROTEUS MIRABILIS":"PROTEUS MIRABILIS","NON FERMENTING GRAM NEGATIVE RODS":"NON FERMENTING GRAM NEGATIVE RODS","SERRATIA MARCESCENS":"SERRATIA MARCESCENS","OCHROBACTRUM":"OCHROBACTRUM","KLEBSIELLA AEROGENES":"KLEBSIELLA AEROGENES","PROVIDENCIA STUARTII":"PROVIDENCIA STUARTII","KLEBSIELLA OXYTOCA":"KLEBSIELLA OXYTOCA","SPHINGOMONAS":"SPHINGOMONAS","HAEMOPHILUS INFLUENZAE":"HAEMOPHILUS INFLUENZAE","HAEMOPHILUS PARAINFLUENZAE":"HAEMOPHILUS PARAINFLUENZAE","PANTOEA SPECIES":"PANTOEA SPECIES","YERSINIA ENTEROCOLITICA":"YERSINIA ENTEROCOLITICA","KLEBSIELLA AEROGENES (CARBAPENEM RESISTANT)":"KLEBSIELLA AEROGENES (CARBAPENEM RESISTANT)","MORAXELLA NON-LIQUEFACIENS":"MORAXELLA NON-LIQUEFACIENS"},"CORYNEBACTERIUM STRIATUM":{"DIPHTHEROIDS - CORYNEBACTERIUM SPECIES":"CORYNEBACTERIUM STRIATUM","GRAM POSITIVE RODS":"CORYNEBACTERIUM STRIATUM"},"COAG NEGATIVE STAPHYLOCOCCUS":{"GRAM POSITIVE COCCI":"COAG NEGATIVE STAPHYLOCOCCUS","STAPHYLOCOCCUS AUREUS":"STAPHYLOCOCCUS AUREUS","STAPH AUREUS {MRSA}":"STAPH AUREUS {MRSA}","ROTHIA MUCILAGINOSA":"ROTHIA MUCILAGINOSA","STAPHYLOCOCCUS LUGDUNENSIS":"STAPHYLOCOCCUS LUGDUNENSIS","FINEGOLDIA MAGNA":"FINEGOLDIA MAGNA","STAPHYLOCOCCUS SPECIES -NOT STAPH. AUREUS":"COAG NEGATIVE STAPHYLOCOCCUS"},"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":{"PSEUDOMONAS AERUGINOSA":"PSEUDOMONAS AERUGINOSA","PROTEUS MIRABILIS":"PROTEUS MIRABILIS","SERRATIA MARCESCENS":"SERRATIA MARCESCENS","PROTEUS SPECIES":"PROTEUS SPECIES","AEROMONAS VERONII COMPLEX":"AEROMONAS VERONII COMPLEX","OCHROBACTRUM":"OCHROBACTRUM","SALMONELLA ENTERICA":"SALMONELLA ENTERICA","RALSTONIA SPECIES":"RALSTONIA SPECIES","PSEUDOMONAS PUTIDA GROUP":"PSEUDOMONAS PUTIDA GROUP","STENOTROPHOMONAS MALTOPHILIA":"STENOTROPHOMONAS MALTOPHILIA","PROTEUS VULGARIS GROUP":"PROTEUS VULGARIS GROUP","PROVIDENCIA STUARTII":"PROVIDENCIA STUARTII","ROTHIA MUCILAGINOSA":"ROTHIA MUCILAGINOSA","PROVIDENCIA RETTGERI":"PROVIDENCIA RETTGERI","PSEUDOMONAS STUTZERI GROUP":"PSEUDOMONAS STUTZERI GROUP","PSEUDOMONAS SPECIES - NOT P.AERUGINOSA":"PSEUDOMONAS SPECIES - NOT P.AERUGINOSA","YERSINIA ENTEROCOLITICA":"YERSINIA ENTEROCOLITICA","PSEUDOMONAS FLUORESCENS GROUP":"PSEUDOMONAS FLUORESCENS GROUP"},"CLOSTRIDIUM PERFRINGENS":{"GRAM POSITIVE RODS":"CLOSTRIDIUM PERFRINGENS"},"ENTEROCOCCUS CASSELIFLAVUS":{"ENTEROCOCCUS SPECIES":"ENTEROCOCCUS CASSELIFLAVUS"},"LACTOSE FERMENTING GRAM NEGATIVE RODS":{"AEROMONAS CAVIAE COMPLEX":"AEROMONAS CAVIAE COMPLEX","SERRATIA MARCESCENS":"SERRATIA MARCESCENS"},"KLEBSIELLA OXYTOCA":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"KLEBSIELLA OXYTOCA","KLEBSIELLA OXYTOCA (CARBAPENEM RESISTANT)":"KLEBSIELLA OXYTOCA (CARBAPENEM RESISTANT)"},"KLEBSIELLA PNEUMONIAE":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"KLEBSIELLA PNEUMONIAE"},"STREPTOCOCCUS GORDONII":{"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS GORDONII","VIRIDANS GROUP STREPTOCOCCI":"STREPTOCOCCUS GORDONII"},"STAPH AUREUS {MRSA}":{"STAPHYLOCOCCUS AUREUS":"STAPH AUREUS {MRSA}"},"ENTEROCOCCUS FAECALIS":{"GRAM POSITIVE COCCI":"ENTEROCOCCUS FAECALIS","ENTEROCOCCUS SPECIES":"ENTEROCOCCUS FAECALIS","GRAM POSITIVE RODS":"ENTEROCOCCUS FAECALIS","STREPTOCOCCUS SPECIES":"ENTEROCOCCUS FAECALIS"},"CITROBACTER FREUNDII COMPLEX":{"GRAM NEGATIVE RODS":"CITROBACTER FREUNDII COMPLEX","LACTOSE FERMENTING GRAM NEGATIVE RODS":"CITROBACTER FREUNDII COMPLEX"},"STREPTOCOCCUS MITIS GROUP":{"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS MITIS GROUP","VIRIDANS GROUP STREPTOCOCCI":"STREPTOCOCCUS MITIS GROUP","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"STREPTOCOCCUS MITIS GROUP","STREPTOCOCCUS SPECIES":"STREPTOCOCCUS MITIS GROUP"},"NON FERMENTING GRAM NEGATIVE RODS":{"PSEUDOMONAS AERUGINOSA":"PSEUDOMONAS AERUGINOSA","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","RALSTONIA SPECIES":"RALSTONIA SPECIES","STENOTROPHOMONAS MALTOPHILIA":"STENOTROPHOMONAS MALTOPHILIA","PSEUDOMONAS SPECIES - NOT P.AERUGINOSA":"PSEUDOMONAS SPECIES - NOT P.AERUGINOSA","SPHINGOMONAS":"SPHINGOMONAS"},"MORGANELLA MORGANII":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"MORGANELLA MORGANII"},"ENTEROCOCCUS SPECIES":{"GRAM POSITIVE COCCI":"ENTEROCOCCUS SPECIES"},"ENTEROBACTER CLOACAE COMPLEX":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROBACTER CLOACAE COMPLEX","GRAM NEGATIVE RODS":"ENTEROBACTER CLOACAE COMPLEX","ENTEROBACTER CLOACAE COMPLEX (CARBAPENEM RESISTANT)":"ENTEROBACTER CLOACAE COMPLEX (CARBAPENEM RESISTANT)"},"CANDIDA GLABRATA":{"YEAST":"CANDIDA GLABRATA","YEAST, NOT CANDIDA ALBICANS":"CANDIDA GLABRATA","CANDIDA SPECIES":"CANDIDA GLABRATA"},"ENTEROCOCCUS AVIUM":{"ENTEROCOCCUS SPECIES":"ENTEROCOCCUS AVIUM","GRAM POSITIVE COCCI":"ENTEROCOCCUS AVIUM"},"STREPTOCOCCUS ANGINOSUS GROUP":{"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS ANGINOSUS GROUP","VIRIDANS GROUP STREPTOCOCCI":"STREPTOCOCCUS ANGINOSUS GROUP","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"STREPTOCOCCUS ANGINOSUS GROUP","STREPTOCOCCUS SPECIES":"STREPTOCOCCUS ANGINOSUS GROUP"},"GRAM POSITIVE RODS":{"LACTOBACILLUS RHAMNOSUS":"LACTOBACILLUS RHAMNOSUS","LISTERIA MONOCYTOGENES":"LISTERIA MONOCYTOGENES","ROTHIA MUCILAGINOSA":"ROTHIA MUCILAGINOSA","LISTERIA SPECIES":"LISTERIA SPECIES","LACTOBACILLUS SPECIES":"LACTOBACILLUS SPECIES"},"CANDIDA PARAPSILOSIS COMPLEX":{"YEAST":"CANDIDA PARAPSILOSIS COMPLEX"},"ACINETOBACTER BAUMANNII COMPLEX":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ACINETOBACTER BAUMANNII COMPLEX","GRAM NEGATIVE COCCOBACILLI":"ACINETOBACTER BAUMANNII COMPLEX"},"CANDIDA ALBICANS":{"YEAST":"CANDIDA ALBICANS","CANDIDA SPECIES":"CANDIDA ALBICANS"},"KLEBSIELLA AEROGENES":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"KLEBSIELLA AEROGENES"},"ENTEROCOCCUS RAFFINOSUS":{"GRAM POSITIVE COCCI":"ENTEROCOCCUS RAFFINOSUS","ENTEROCOCCUS SPECIES":"ENTEROCOCCUS RAFFINOSUS"},"BACILLUS SPECIES":{"GRAM POSITIVE RODS":"BACILLUS SPECIES"},"GEMELLA SPECIES":{"GRAM POSITIVE COCCI":"GEMELLA SPECIES"},"AEROMONAS SPECIES":{"GRAM NEGATIVE RODS":"AEROMONAS SPECIES","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"AEROMONAS SPECIES","LACTOSE FERMENTING GRAM NEGATIVE RODS":"AEROMONAS SPECIES"},"ANAEROBIC GRAM POSITIVE COCCI":{"DIPHTHEROIDS - CORYNEBACTERIUM SPECIES":"DIPHTHEROIDS - CORYNEBACTERIUM SPECIES","ENTEROCOCCUS AVIUM":"ENTEROCOCCUS AVIUM","ENTEROCOCCUS SPECIES":"ENTEROCOCCUS SPECIES"},"ACHROMOBACTER XYLOSOXIDANS":{"GRAM NEGATIVE RODS":"ACHROMOBACTER XYLOSOXIDANS","ENTERIC GRAM NEGATIVE RODS":"ACHROMOBACTER XYLOSOXIDANS"},"EIKENELLA CORRODENS":{"GRAM NEGATIVE RODS":"EIKENELLA CORRODENS"},"CANDIDA LUSITANIAE":{"YEAST":"CANDIDA LUSITANIAE","CANDIDA SPECIES":"CANDIDA LUSITANIAE"},"ABIOTROPHIA SPECIES (OR GRANULICATELLA SPECIES)":{"GRAM POSITIVE COCCI":"ABIOTROPHIA SPECIES (OR GRANULICATELLA SPECIES)"},"ENTERIC GRAM NEGATIVE RODS":{"ESCHERICHIA COLI":"ESCHERICHIA COLI","GRAM NEGATIVE RODS":"ENTERIC GRAM NEGATIVE RODS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","ENTEROBACTER CLOACAE COMPLEX":"ENTEROBACTER CLOACAE COMPLEX","SERRATIA MARCESCENS":"SERRATIA MARCESCENS"},"ANAEROBIC GRAM POSITIVE RODS":{"CLOSTRIDIUM SPECIES":"CLOSTRIDIUM SPECIES","EGGERTHELLA LENTA":"EGGERTHELLA LENTA","GRAM POSITIVE RODS":"ANAEROBIC GRAM POSITIVE RODS","CLOSTRIDIUM SEPTICUM":"CLOSTRIDIUM SEPTICUM"},"GRAM NEGATIVE COCCOBACILLI":{"HAEMOPHILUS INFLUENZAE":"HAEMOPHILUS INFLUENZAE","OCHROBACTRUM":"OCHROBACTRUM"},"GRAM NEGATIVE DIPLOCOCCI":{"NEISSERIA SPECIES":"NEISSERIA SPECIES"},"CANDIDA DUBLINIENSIS":{"YEAST":"CANDIDA DUBLINIENSIS"},"CITROBACTER KOSERI":{"GRAM NEGATIVE RODS":"CITROBACTER KOSERI","LACTOSE FERMENTING GRAM NEGATIVE RODS":"CITROBACTER KOSERI"},"STREPTOCOCCUS SALIVARIUS GROUP":{"STREPTOCOCCUS SPECIES":"STREPTOCOCCUS SALIVARIUS GROUP","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS SALIVARIUS GROUP","VIRIDANS GROUP STREPTOCOCCI":"STREPTOCOCCUS SALIVARIUS GROUP"},"STREPTOCOCCUS PARASANGUINIS":{"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS PARASANGUINIS"},"STREPTOCOCCUS SANGUINIS":{"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS SANGUINIS","VIRIDANS GROUP STREPTOCOCCI":"STREPTOCOCCUS SANGUINIS","STREPTOCOCCUS SPECIES":"STREPTOCOCCUS SANGUINIS"},"ENTEROCOCCUS GALLINARUM":{"GRAM POSITIVE COCCI":"ENTEROCOCCUS GALLINARUM","ENTEROCOCCUS SPECIES":"ENTEROCOCCUS GALLINARUM"},"CANDIDA SPECIES":{"YEAST":"CANDIDA SPECIES","CANDIDA TROPICALIS":"CANDIDA TROPICALIS"},"FUSOBACTERIUM NECROPHORUM":{"GRAM NEGATIVE RODS":"FUSOBACTERIUM NECROPHORUM"},"BURKHOLDERIA CEPACIA COMPLEX":{"GRAM NEGATIVE RODS":"BURKHOLDERIA CEPACIA COMPLEX"},"STREP. SPECIES - NONHEMOLYTIC":{"STREPTOCOCCUS BOVIS GP.":"STREPTOCOCCUS BOVIS GP.","STREPTOCOCCUS GALLOLYTICUS":"STREPTOCOCCUS GALLOLYTICUS","STREPTOCOCCUS MUTANS GROUP":"STREPTOCOCCUS MUTANS GROUP","STREPTOCOCCUS SALIVARIUS GROUP":"STREPTOCOCCUS SALIVARIUS GROUP"},"PROTEUS MIRABILIS":{"PROTEUS SPECIES":"PROTEUS MIRABILIS"},"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":{"VIRIDANS GROUP STREPTOCOCCI":"VIRIDANS GROUP STREPTOCOCCI","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE"},"ARTHROBACTER SPECIES":{"GRAM POSITIVE RODS":"ARTHROBACTER SPECIES"},"BUDDING YEAST FORMS":{"CANDIDA ALBICANS":"CANDIDA ALBICANS","CANDIDA GLABRATA":"CANDIDA GLABRATA","SACCHAROMYCES CEREVISIAE":"SACCHAROMYCES CEREVISIAE","CANDIDA TROPICALIS":"CANDIDA TROPICALIS","CANDIDA PARAPSILOSIS COMPLEX":"CANDIDA PARAPSILOSIS COMPLEX","CANDIDA GUILLIERMONDII":"CANDIDA GUILLIERMONDII","CANDIDA SPECIES - NOT C.ALBICANS":"CANDIDA SPECIES - NOT C.ALBICANS","YEAST":"BUDDING YEAST FORMS"},"CANDIDA KRUSEI":{"YEAST":"CANDIDA KRUSEI","CANDIDA SPECIES":"CANDIDA KRUSEI","YEAST, NOT CANDIDA ALBICANS":"CANDIDA KRUSEI"},"BREVIBACTERIUM SPECIES":{"GRAM POSITIVE RODS":"BREVIBACTERIUM SPECIES"},"RHODOTORULA SPECIES":{"YEAST":"RHODOTORULA SPECIES"},"AEROCOCCUS URINAE":{"GRAM POSITIVE COCCI":"AEROCOCCUS URINAE"},"STAPH AUREUS(COLONY VARIANT - SMALL COLONY OR OTHER MORPHOTYPE)":{"STAPHYLOCOCCUS AUREUS":"STAPHYLOCOCCUS AUREUS"},"EGGERTHELLA LENTA":{"GRAM POSITIVE RODS":"EGGERTHELLA LENTA"},"STREPTOCOCCUS MUTANS GROUP":{"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS MUTANS GROUP","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"STREPTOCOCCUS MUTANS GROUP"},"ACINETOBACTER SPECIES":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ACINETOBACTER SPECIES"},"CANDIDA TROPICALIS":{"YEAST":"CANDIDA TROPICALIS","YEAST, NOT CANDIDA ALBICANS":"CANDIDA TROPICALIS"},"STREPTOCOCCUS AGALACTIAE (GROUP B)":{"STREPTOCOCCUS SPECIES":"STREPTOCOCCUS AGALACTIAE (GROUP B)"},"CARDIOBACTERIUM HOMINIS":{"GRAM NEGATIVE RODS":"CARDIOBACTERIUM HOMINIS"},"FUSOBACTERIUM NUCLEATUM":{"GRAM NEGATIVE COCCOBACILLI":"FUSOBACTERIUM NUCLEATUM"},"CORYNEBACTERIUM SPECIES":{"GRAM POSITIVE RODS":"CORYNEBACTERIUM SPECIES","CORYNEBACTERIUM STRIATUM":"CORYNEBACTERIUM STRIATUM"},"STREPTOCOCCUS PYOGENES (GROUP A)":{"STREPTOCOCCUS SPECIES":"STREPTOCOCCUS PYOGENES (GROUP A)"},"STREPTOCOCCUS PNEUMONIAE":{"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS PNEUMONIAE","STREPTOCOCCUS SPECIES":"STREPTOCOCCUS PNEUMONIAE"},"ENTEROBACTER CLOACAE COMPLEX (CARBAPENEM RESISTANT)":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROBACTER CLOACAE COMPLEX (CARBAPENEM RESISTANT)","LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROBACTER CLOACAE COMPLEX (CARBAPENEM RESISTANT)"},"STREPTOCOCCUS SPECIES":{"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE"},"CAPNOCYTOPHAGA SPECIES":{"GRAM NEGATIVE RODS":"CAPNOCYTOPHAGA SPECIES"},"LACTOBACILLUS RHAMNOSUS":{"LACTOBACILLUS SPECIES":"LACTOBACILLUS RHAMNOSUS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"LACTOBACILLUS RHAMNOSUS"},"BURKHOLDERIA GLADIOLI":{"GRAM NEGATIVE RODS":"BURKHOLDERIA GLADIOLI","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"BURKHOLDERIA GLADIOLI"},"KLEBSIELLA OXYTOCA (CARBAPENEM RESISTANT)":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"KLEBSIELLA OXYTOCA (CARBAPENEM RESISTANT)"},"CANDIDA GUILLIERMONDII":{"YEAST":"CANDIDA GUILLIERMONDII","CANDIDA SPECIES - NOT C.ALBICANS":"CANDIDA GUILLIERMONDII"},"CAMPYLOBACTER SPECIES":{"GRAM NEGATIVE RODS":"CAMPYLOBACTER SPECIES"},"ESCHERICHIA COLI (CARBAPENEM RESISTANT)":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"ESCHERICHIA COLI (CARBAPENEM RESISTANT)"},"CAPNOCYTOPHAGA CANIMORSUS":{"GRAM NEGATIVE RODS":"CAPNOCYTOPHAGA CANIMORSUS"},"ESCHERICHIA HERMANII":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ESCHERICHIA HERMANII"},"BETA STREPTOCOCCUS GROUP G":{"BETA STREPTOCOCCUS SPECIES":"BETA STREPTOCOCCUS GROUP G"},"CORYNEBACTERIUM JEIKEIUM":{"GRAM POSITIVE RODS":"CORYNEBACTERIUM JEIKEIUM","DIPHTHEROIDS - CORYNEBACTERIUM SPECIES":"CORYNEBACTERIUM JEIKEIUM"},"YEAST":{"YEAST, NOT CANDIDA ALBICANS":"YEAST, NOT CANDIDA ALBICANS"},"CANDIDA SPECIES - NOT C.ALBICANS":{"CANDIDA TROPICALIS":"CANDIDA TROPICALIS"},"ELIZABETHKINGIA SPECIES":{"GRAM NEGATIVE RODS":"ELIZABETHKINGIA SPECIES"},"ENTEROBACTER GERGOVIAE":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROBACTER GERGOVIAE"},"CLOSTRIDIUM SEPTICUM":{"GRAM POSITIVE RODS":"CLOSTRIDIUM SEPTICUM"},"CORYNEBACTERIUM PROPINQUUM":{"GRAM POSITIVE RODS":"CORYNEBACTERIUM PROPINQUUM"},"BACTEROIDES SPECIES NOT FRAGILIS":{"BACTEROIDES VULGATUS":"BACTEROIDES VULGATUS"},"BACTEROIDES VULGATUS":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"BACTEROIDES VULGATUS"},"ANAEROBIC GRAM NEGATIVE RODS":{"BACTEROIDES FRAGILIS":"BACTEROIDES FRAGILIS","CAPNOCYTOPHAGA SPECIES":"CAPNOCYTOPHAGA SPECIES"},"ENTEROBACTER AEROGENES":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROBACTER AEROGENES"},"CLOSTRIDIUM INNOCUUM":{"GRAM POSITIVE RODS":"CLOSTRIDIUM INNOCUUM"},"SACCHAROMYCES CEREVISIAE":{"YEAST":"SACCHAROMYCES CEREVISIAE","YEAST, NOT CANDIDA ALBICANS":"SACCHAROMYCES CEREVISIAE"},"CANDIDA KEFYR":{"YEAST":"CANDIDA KEFYR"},"CORYNEBACTERIUM AMYCOLATUM":{"CORYNEBACTERIUM SPECIES":"CORYNEBACTERIUM AMYCOLATUM"},"CANDIDA PARAPSILOSIS":{"YEAST":"CANDIDA PARAPSILOSIS"},"GORDONIA SPECIES":{"GRAM POSITIVE RODS":"GORDONIA SPECIES"},"ACID FAST BACILLI":{"MYCOBACTERIUM MUCOGENICUM GROUP":"MYCOBACTERIUM MUCOGENICUM GROUP"},"FUSARIUM SPECIES":{"MOLD":"FUSARIUM SPECIES"},"EUBACTERIUM SPECIES":{"GRAM POSITIVE RODS":"EUBACTERIUM SPECIES"},"BURKHOLDERIA MULTIVORANS":{"GRAM NEGATIVE RODS":"BURKHOLDERIA MULTIVORANS"}},"diff":{"BACTEC FX PLUS Aerobic/F":{"BACTEC FX Plus Anaerobic/F":"BACTEC FX PLUS Aerobic/F","BACTEC FX Standard 10 Aerobic/F":"BACTEC FX PLUS Aerobic/F"},"BACTEC FX Myco/F Lytic":{"BACTEC FX PLUS Aerobic/F":"BACTEC FX Myco/F Lytic"},"BACTEC FX Plus Anaerobic/F":{"BACTEC FX Standard 10 Aerobic/F":"BACTEC FX Plus Anaerobic/F"},"ESCHERICHIA COLI":{"KLEBSIELLA OXYTOCA":"ESCHERICHIA COLI","KLEBSIELLA PNEUMONIAE":"ESCHERICHIA COLI","STREPTOCOCCUS ANGINOSUS GROUP":"ESCHERICHIA COLI","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ESCHERICHIA COLI","VIRIDANS GROUP STREPTOCOCCI":"ESCHERICHIA COLI","NOCARDIA NOVA":"ESCHERICHIA COLI","STREPTOCOCCUS PNEUMONIAE":"ESCHERICHIA COLI","PROTEUS MIRABILIS":"ESCHERICHIA COLI","PSEUDOMONAS AERUGINOSA":"ESCHERICHIA COLI","ROTHIA MUCILAGINOSA":"ESCHERICHIA COLI","STAPHYLOCOCCUS AUREUS":"ESCHERICHIA COLI","GRAM POSITIVE COCCI":"ESCHERICHIA COLI","STREPTOCOCCUS MITIS GROUP":"ESCHERICHIA COLI","YEAST":"ESCHERICHIA COLI","MORGANELLA MORGANII":"ESCHERICHIA COLI","HAEMOPHILUS INFLUENZAE":"ESCHERICHIA COLI","GEMELLA SPECIES":"ESCHERICHIA COLI","PROVIDENCIA STUARTII":"ESCHERICHIA COLI","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"ESCHERICHIA COLI","GRAM POSITIVE RODS":"ESCHERICHIA COLI","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"ESCHERICHIA COLI","STAPH AUREUS {MRSA}":"ESCHERICHIA COLI","PSEUDOMONAS SPECIES - NOT P.AERUGINOSA":"ESCHERICHIA COLI","STREPTOCOCCUS BOVIS GP.":"ESCHERICHIA COLI","LACTOCOCCUS SPECIES":"ESCHERICHIA COLI","KLEBSIELLA AEROGENES":"ESCHERICHIA COLI","STREPTOCOCCUS AGALACTIAE (GROUP B)":"ESCHERICHIA COLI","SERRATIA MARCESCENS":"ESCHERICHIA COLI","STREPTOCOCCUS GALLOLYTICUS":"ESCHERICHIA COLI","STREPTOCOCCUS SALIVARIUS GROUP":"ESCHERICHIA COLI","LACTOBACILLUS RHAMNOSUS":"ESCHERICHIA COLI","STREPTOCOCCUS PYOGENES (GROUP A)":"ESCHERICHIA COLI","MICROCOCCUS SPECIES":"ESCHERICHIA COLI","KOCURIA":"ESCHERICHIA COLI","PARABACTEROIDES DISTASONIS":"ESCHERICHIA COLI"},"ENTEROCOCCUS FAECIUM":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS FAECIUM","STREPTOCOCCUS ANGINOSUS GROUP":"ENTEROCOCCUS FAECIUM","ESCHERICHIA COLI":"ENTEROCOCCUS FAECIUM","KLEBSIELLA OXYTOCA":"ENTEROCOCCUS FAECIUM","KLEBSIELLA PNEUMONIAE":"ENTEROCOCCUS FAECIUM","KLEBSIELLA AEROGENES (CARBAPENEM RESISTANT)":"ENTEROCOCCUS FAECIUM","YEAST":"ENTEROCOCCUS FAECIUM","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS FAECIUM","PSEUDOMONAS AERUGINOSA":"ENTEROCOCCUS FAECIUM","STAPHYLOCOCCUS AUREUS":"ENTEROCOCCUS FAECIUM","ESCHERICHIA COLI (CARBAPENEM RESISTANT)":"ENTEROCOCCUS FAECIUM","STAPH AUREUS {MRSA}":"ENTEROCOCCUS FAECIUM","STREPTOCOCCUS SPECIES":"ENTEROCOCCUS FAECIUM","STREPTOCOCCUS MITIS GROUP":"ENTEROCOCCUS FAECIUM","PROTEUS MIRABILIS":"ENTEROCOCCUS FAECIUM","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"ENTEROCOCCUS FAECIUM","VIRIDANS GROUP STREPTOCOCCI":"ENTEROCOCCUS FAECIUM","LACTOCOCCUS SPECIES":"ENTEROCOCCUS FAECIUM","GRAM NEGATIVE RODS":"ENTEROCOCCUS FAECIUM","KLEBSIELLA AEROGENES":"ENTEROCOCCUS FAECIUM","STENOTROPHOMONAS MALTOPHILIA":"ENTEROCOCCUS FAECIUM","NON SPORE-FORMING ANAEROBIC GRAM POSITIVE RODS":"ENTEROCOCCUS FAECIUM","PREVOTELLA SPECIES":"ENTEROCOCCUS FAECIUM","GRAM POSITIVE RODS":"ENTEROCOCCUS FAECIUM","LACTOBACILLUS RHAMNOSUS":"ENTEROCOCCUS FAECIUM","STREPTOCOCCUS PARASANGUINIS":"ENTEROCOCCUS FAECIUM","GEMELLA SPECIES":"ENTEROCOCCUS FAECIUM","NON FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS FAECIUM","FUNGAL ORGANISMS":"ENTEROCOCCUS FAECIUM","PAENIBACILLUS SPECIES":"ENTEROCOCCUS FAECIUM"},"GRAM POSITIVE COCCI":{"GRAM POSITIVE RODS":"GRAM POSITIVE COCCI","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"GRAM POSITIVE COCCI","LACTOSE FERMENTING GRAM NEGATIVE RODS":"GRAM POSITIVE COCCI","YEAST":"GRAM POSITIVE COCCI","SERRATIA MARCESCENS":"GRAM POSITIVE COCCI","NEISSERIA SPECIES":"GRAM POSITIVE COCCI","PSEUDOMONAS AERUGINOSA":"GRAM POSITIVE COCCI","KLEBSIELLA PNEUMONIAE":"GRAM POSITIVE COCCI","KLEBSIELLA OXYTOCA":"GRAM POSITIVE COCCI","PROTEUS SPECIES":"GRAM POSITIVE COCCI","STENOTROPHOMONAS MALTOPHILIA":"GRAM POSITIVE COCCI"},"GRAM NEGATIVE RODS":{"STAPHYLOCOCCUS AUREUS":"GRAM NEGATIVE RODS","GRAM POSITIVE COCCI":"GRAM NEGATIVE RODS","YEAST":"GRAM NEGATIVE RODS","STREPTOCOCCUS ANGINOSUS GROUP":"GRAM NEGATIVE RODS","VIRIDANS GROUP STREPTOCOCCI":"GRAM NEGATIVE RODS","STREPTOCOCCUS MITIS GROUP":"GRAM NEGATIVE RODS","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"GRAM NEGATIVE RODS","STAPH AUREUS {MRSA}":"GRAM NEGATIVE RODS","STREPTOCOCCUS PARASANGUINIS":"GRAM NEGATIVE RODS","ROTHIA MUCILAGINOSA":"GRAM NEGATIVE RODS","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"GRAM NEGATIVE RODS"},"CANDIDA KEFYR":{"CANDIDA KRUSEI":"CANDIDA KEFYR","CANDIDA PARAPSILOSIS COMPLEX":"CANDIDA KEFYR"},"COAG NEGATIVE STAPHYLOCOCCUS":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"COAG NEGATIVE STAPHYLOCOCCUS","PSEUDOMONAS AERUGINOSA":"COAG NEGATIVE STAPHYLOCOCCUS","ENTEROCOCCUS FAECALIS":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS SPECIES":"COAG NEGATIVE STAPHYLOCOCCUS","GRAM POSITIVE RODS":"COAG NEGATIVE STAPHYLOCOCCUS","GRAM NEGATIVE RODS":"COAG NEGATIVE STAPHYLOCOCCUS","KLEBSIELLA PNEUMONIAE":"COAG NEGATIVE STAPHYLOCOCCUS","GRAM NEGATIVE COCCOBACILLI":"COAG NEGATIVE STAPHYLOCOCCUS","SERRATIA MARCESCENS":"COAG NEGATIVE STAPHYLOCOCCUS","KLEBSIELLA OXYTOCA":"COAG NEGATIVE STAPHYLOCOCCUS","YEAST":"COAG NEGATIVE STAPHYLOCOCCUS","ESCHERICHIA COLI":"COAG NEGATIVE STAPHYLOCOCCUS","ENTEROCOCCUS FAECIUM":"COAG NEGATIVE STAPHYLOCOCCUS","VIRIDANS GROUP STREPTOCOCCI":"COAG NEGATIVE STAPHYLOCOCCUS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"COAG NEGATIVE STAPHYLOCOCCUS","ENTEROCOCCUS SPECIES":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS MITIS GROUP":"COAG NEGATIVE STAPHYLOCOCCUS","CUTIBACTERIUM ACNES":"COAG NEGATIVE STAPHYLOCOCCUS","CORYNEBACTERIUM SPECIES":"COAG NEGATIVE STAPHYLOCOCCUS","ENTEROBACTER CLOACAE COMPLEX":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS PARASANGUINIS":"COAG NEGATIVE STAPHYLOCOCCUS","ENTERIC GRAM NEGATIVE RODS":"COAG NEGATIVE STAPHYLOCOCCUS","ENTEROCOCCUS CASSELIFLAVUS":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS AGALACTIAE (GROUP B)":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS PYOGENES (GROUP A)":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS SALIVARIUS GROUP":"COAG NEGATIVE STAPHYLOCOCCUS","KOCURIA":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"COAG NEGATIVE STAPHYLOCOCCUS","RHODOTORULA SPECIES":"COAG NEGATIVE STAPHYLOCOCCUS","SPHINGOMONAS":"COAG NEGATIVE STAPHYLOCOCCUS","PSEUDOMONAS PUTIDA GROUP":"COAG NEGATIVE STAPHYLOCOCCUS","STENOTROPHOMONAS MALTOPHILIA":"COAG NEGATIVE STAPHYLOCOCCUS","MORAXELLA CATARRHALIS":"COAG NEGATIVE STAPHYLOCOCCUS","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS ANGINOSUS GROUP":"COAG NEGATIVE STAPHYLOCOCCUS","PROTEUS VULGARIS GROUP":"COAG NEGATIVE STAPHYLOCOCCUS","FUSOBACTERIUM NECROPHORUM":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS SANGUINIS":"COAG NEGATIVE STAPHYLOCOCCUS","CORYNEBACTERIUM MINUTISSIMUM":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS DYSGALACTIAE":"COAG NEGATIVE STAPHYLOCOCCUS","VEILLONELLA SPECIES":"COAG NEGATIVE STAPHYLOCOCCUS","RALSTONIA SPECIES":"COAG NEGATIVE STAPHYLOCOCCUS","LACTOBACILLUS RHAMNOSUS":"COAG NEGATIVE STAPHYLOCOCCUS","NON FERMENTING GRAM NEGATIVE RODS":"COAG NEGATIVE STAPHYLOCOCCUS","CORYNEBACTERIUM AMYCOLATUM":"COAG NEGATIVE STAPHYLOCOCCUS","MICROCOCCUS SPECIES":"COAG NEGATIVE STAPHYLOCOCCUS","FUSOBACTERIUM NUCLEATUM":"COAG NEGATIVE STAPHYLOCOCCUS","PREVOTELLA SPECIES":"COAG NEGATIVE STAPHYLOCOCCUS","KLEBSIELLA AEROGENES":"COAG NEGATIVE STAPHYLOCOCCUS","STREPTOCOCCUS GALLOLYTICUS":"COAG NEGATIVE STAPHYLOCOCCUS"},"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":{"YEAST":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","STAPH AUREUS {MRSA}":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","STAPHYLOCOCCUS AUREUS":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","PANTOEA AGGLOMERANS":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","PANTOEA SPECIES":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS MITIS GROUP":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS ANGINOSUS GROUP":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","VIRIDANS GROUP STREPTOCOCCI":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS BOVIS GP.":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS SALIVARIUS GROUP":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS SPECIES":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","PARABACTEROIDES DISTASONIS":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS GALLOLYTICUS":"NON LACTOSE FERMENTING GRAM NEGATIVE RODS"},"CLOSTRIDIUM PERFRINGENS":{"ENTEROCOCCUS CASSELIFLAVUS":"CLOSTRIDIUM PERFRINGENS","ENTEROCOCCUS FAECIUM":"CLOSTRIDIUM PERFRINGENS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"CLOSTRIDIUM PERFRINGENS","STREPTOCOCCUS ANGINOSUS GROUP":"CLOSTRIDIUM PERFRINGENS","STREPTOCOCCUS GORDONII":"CLOSTRIDIUM PERFRINGENS","VIRIDANS GROUP STREPTOCOCCI":"CLOSTRIDIUM PERFRINGENS","KLEBSIELLA PNEUMONIAE":"CLOSTRIDIUM PERFRINGENS","MORGANELLA MORGANII":"CLOSTRIDIUM PERFRINGENS","ENTEROCOCCUS SPECIES":"CLOSTRIDIUM PERFRINGENS","COAG NEGATIVE STAPHYLOCOCCUS":"CLOSTRIDIUM PERFRINGENS","ENTEROCOCCUS FAECALIS":"CLOSTRIDIUM PERFRINGENS","ESCHERICHIA COLI":"CLOSTRIDIUM PERFRINGENS","GRAM POSITIVE COCCI":"CLOSTRIDIUM PERFRINGENS","KLEBSIELLA OXYTOCA":"CLOSTRIDIUM PERFRINGENS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"CLOSTRIDIUM PERFRINGENS","ENTEROCOCCUS AVIUM":"CLOSTRIDIUM PERFRINGENS","EGGERTHELLA LENTA":"CLOSTRIDIUM PERFRINGENS"},"ENTEROCOCCUS CASSELIFLAVUS":{"ENTEROCOCCUS FAECIUM":"ENTEROCOCCUS CASSELIFLAVUS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS CASSELIFLAVUS","STREPTOCOCCUS ANGINOSUS GROUP":"ENTEROCOCCUS CASSELIFLAVUS","ESCHERICHIA COLI":"ENTEROCOCCUS CASSELIFLAVUS","KLEBSIELLA OXYTOCA":"ENTEROCOCCUS CASSELIFLAVUS","KLEBSIELLA PNEUMONIAE":"ENTEROCOCCUS CASSELIFLAVUS","ENTEROCOCCUS GALLINARUM":"ENTEROCOCCUS CASSELIFLAVUS","ENTEROCOCCUS RAFFINOSUS":"ENTEROCOCCUS CASSELIFLAVUS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS CASSELIFLAVUS","ENTEROCOCCUS FAECALIS":"ENTEROCOCCUS CASSELIFLAVUS","PSEUDOMONAS AERUGINOSA":"ENTEROCOCCUS CASSELIFLAVUS","STREPTOCOCCUS GALLOLYTICUS":"ENTEROCOCCUS CASSELIFLAVUS"},"LACTOSE FERMENTING GRAM NEGATIVE RODS":{"STREPTOCOCCUS ANGINOSUS GROUP":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STAPHYLOCOCCUS AUREUS":"LACTOSE FERMENTING GRAM NEGATIVE RODS","VIRIDANS GROUP STREPTOCOCCI":"LACTOSE FERMENTING GRAM NEGATIVE RODS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS PNEUMONIAE":"LACTOSE FERMENTING GRAM NEGATIVE RODS","YEAST":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS MITIS GROUP":"LACTOSE FERMENTING GRAM NEGATIVE RODS","NON FERMENTING GRAM NEGATIVE RODS":"LACTOSE FERMENTING GRAM NEGATIVE RODS","PSEUDOMONAS AERUGINOSA":"LACTOSE FERMENTING GRAM NEGATIVE RODS","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"LACTOSE FERMENTING GRAM NEGATIVE RODS","PROTEUS MIRABILIS":"LACTOSE FERMENTING GRAM NEGATIVE RODS","PROTEUS SPECIES":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STAPH AUREUS {MRSA}":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS SPECIES":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS GALLOLYTICUS":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS PARASANGUINIS":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS BOVIS GP.":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STREPTOCOCCUS SALIVARIUS GROUP":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STREP. SPECIES - NONHEMOLYTIC":"LACTOSE FERMENTING GRAM NEGATIVE RODS","MORGANELLA MORGANII":"LACTOSE FERMENTING GRAM NEGATIVE RODS","PASTEURELLA SPECIES":"LACTOSE FERMENTING GRAM NEGATIVE RODS","NON SPORE-FORMING ANAEROBIC GRAM POSITIVE RODS":"LACTOSE FERMENTING GRAM NEGATIVE RODS","PSEUDOMONAS SPECIES - NOT P.AERUGINOSA":"LACTOSE FERMENTING GRAM NEGATIVE RODS","STENOTROPHOMONAS MALTOPHILIA":"LACTOSE FERMENTING GRAM NEGATIVE RODS","PROVIDENCIA STUARTII":"LACTOSE FERMENTING GRAM NEGATIVE RODS","TRUEPERELLA SPECIES":"LACTOSE FERMENTING GRAM NEGATIVE RODS"},"KLEBSIELLA OXYTOCA":{"KLEBSIELLA PNEUMONIAE":"KLEBSIELLA OXYTOCA","STREPTOCOCCUS ANGINOSUS GROUP":"KLEBSIELLA OXYTOCA","ROTHIA MUCILAGINOSA":"KLEBSIELLA OXYTOCA","VIRIDANS GROUP STREPTOCOCCI":"KLEBSIELLA OXYTOCA","SERRATIA MARCESCENS":"KLEBSIELLA OXYTOCA","STAPHYLOCOCCUS AUREUS":"KLEBSIELLA OXYTOCA","PREVOTELLA SPECIES":"KLEBSIELLA OXYTOCA","PROTEUS MIRABILIS":"KLEBSIELLA OXYTOCA","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"KLEBSIELLA OXYTOCA","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"KLEBSIELLA OXYTOCA","PSEUDOMONAS AERUGINOSA":"KLEBSIELLA OXYTOCA"},"KLEBSIELLA PNEUMONIAE":{"STREPTOCOCCUS ANGINOSUS GROUP":"KLEBSIELLA PNEUMONIAE","STAPHYLOCOCCUS AUREUS":"KLEBSIELLA PNEUMONIAE","STAPH AUREUS {MRSA}":"KLEBSIELLA PNEUMONIAE","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"KLEBSIELLA PNEUMONIAE","VIRIDANS GROUP STREPTOCOCCI":"KLEBSIELLA PNEUMONIAE","STAPHYLOCOCCUS SPECIES":"KLEBSIELLA PNEUMONIAE","TRUEPERELLA SPECIES":"KLEBSIELLA PNEUMONIAE","PSEUDOMONAS AERUGINOSA":"KLEBSIELLA PNEUMONIAE","PROTEUS MIRABILIS":"KLEBSIELLA PNEUMONIAE","CITROBACTER AMALONATICUS":"KLEBSIELLA PNEUMONIAE","STREPTOCOCCUS MITIS GROUP":"KLEBSIELLA PNEUMONIAE","PROTEUS SPECIES":"KLEBSIELLA PNEUMONIAE","STREPTOCOCCUS SPECIES":"KLEBSIELLA PNEUMONIAE","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"KLEBSIELLA PNEUMONIAE","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"KLEBSIELLA PNEUMONIAE","MORGANELLA MORGANII":"KLEBSIELLA PNEUMONIAE","STREPTOCOCCUS BOVIS GP.":"KLEBSIELLA PNEUMONIAE","STREPTOCOCCUS GALLOLYTICUS":"KLEBSIELLA PNEUMONIAE","AEROMONAS CAVIAE COMPLEX":"KLEBSIELLA PNEUMONIAE","STREPTOCOCCUS AGALACTIAE (GROUP B)":"KLEBSIELLA PNEUMONIAE","ROTHIA MUCILAGINOSA":"KLEBSIELLA PNEUMONIAE","NON SPORE-FORMING ANAEROBIC GRAM POSITIVE RODS":"KLEBSIELLA PNEUMONIAE","STREPTOCOCCUS SALIVARIUS GROUP":"KLEBSIELLA PNEUMONIAE","YEAST":"KLEBSIELLA PNEUMONIAE"},"STAPH AUREUS {MRSA}":{"STREPTOCOCCUS SALIVARIUS GROUP":"STAPH AUREUS {MRSA}","STREPTOCOCCUS SPECIES":"STAPH AUREUS {MRSA}","STREPTOCOCCUS MITIS GROUP":"STAPH AUREUS {MRSA}","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STAPH AUREUS {MRSA}","STREPTOCOCCUS AGALACTIAE (GROUP B)":"STAPH AUREUS {MRSA}","STREPTOCOCCUS DYSGALACTIAE":"STAPH AUREUS {MRSA}","STREPTOCOCCUS PYOGENES (GROUP A)":"STAPH AUREUS {MRSA}","YEAST":"STAPH AUREUS {MRSA}","STENOTROPHOMONAS MALTOPHILIA":"STAPH AUREUS {MRSA}"},"ENTEROCOCCUS FAECALIS":{"STAPHYLOCOCCUS AUREUS":"ENTEROCOCCUS FAECALIS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS FAECALIS","ENTEROCOCCUS FAECIUM":"ENTEROCOCCUS FAECALIS","STAPH AUREUS {MRSA}":"ENTEROCOCCUS FAECALIS","KLEBSIELLA AEROGENES":"ENTEROCOCCUS FAECALIS","ESCHERICHIA COLI":"ENTEROCOCCUS FAECALIS","KLEBSIELLA PNEUMONIAE":"ENTEROCOCCUS FAECALIS","GRAM NEGATIVE RODS":"ENTEROCOCCUS FAECALIS","SERRATIA MARCESCENS":"ENTEROCOCCUS FAECALIS","STREPTOCOCCUS ANGINOSUS GROUP":"ENTEROCOCCUS FAECALIS","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"ENTEROCOCCUS FAECALIS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS FAECALIS","PROTEUS MIRABILIS":"ENTEROCOCCUS FAECALIS","KLEBSIELLA OXYTOCA":"ENTEROCOCCUS FAECALIS","PSEUDOMONAS AERUGINOSA":"ENTEROCOCCUS FAECALIS","MORGANELLA MORGANII":"ENTEROCOCCUS FAECALIS","STREPTOCOCCUS BOVIS GP.":"ENTEROCOCCUS FAECALIS","ENTEROCOCCUS RAFFINOSUS":"ENTEROCOCCUS FAECALIS","YEAST":"ENTEROCOCCUS FAECALIS","STREPTOCOCCUS SALIVARIUS GROUP":"ENTEROCOCCUS FAECALIS","STREPTOCOCCUS MITIS GROUP":"ENTEROCOCCUS FAECALIS","STENOTROPHOMONAS MALTOPHILIA":"ENTEROCOCCUS FAECALIS","STREPTOCOCCUS GORDONII":"ENTEROCOCCUS FAECALIS","LACTOBACILLUS RHAMNOSUS":"ENTEROCOCCUS FAECALIS","LACTOBACILLUS SPECIES":"ENTEROCOCCUS FAECALIS","STREPTOCOCCUS GALLOLYTICUS":"ENTEROCOCCUS FAECALIS"},"CITROBACTER FREUNDII COMPLEX":{"ESCHERICHIA COLI":"CITROBACTER FREUNDII COMPLEX","KLEBSIELLA OXYTOCA":"CITROBACTER FREUNDII COMPLEX","ROTHIA MUCILAGINOSA":"CITROBACTER FREUNDII COMPLEX","VIRIDANS GROUP STREPTOCOCCI":"CITROBACTER FREUNDII COMPLEX","ENTEROCOCCUS CASSELIFLAVUS":"CITROBACTER FREUNDII COMPLEX","ENTEROCOCCUS RAFFINOSUS":"CITROBACTER FREUNDII COMPLEX","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"CITROBACTER FREUNDII COMPLEX","ENTEROCOCCUS FAECALIS":"CITROBACTER FREUNDII COMPLEX","GRAM POSITIVE COCCI":"CITROBACTER FREUNDII COMPLEX","SERRATIA MARCESCENS":"CITROBACTER FREUNDII COMPLEX","STREPTOCOCCUS ANGINOSUS GROUP":"CITROBACTER FREUNDII COMPLEX","ENTEROCOCCUS SPECIES":"CITROBACTER FREUNDII COMPLEX","CLOSTRIDIUM PERFRINGENS":"CITROBACTER FREUNDII COMPLEX","KLEBSIELLA PNEUMONIAE":"CITROBACTER FREUNDII COMPLEX","ENTEROBACTER CLOACAE COMPLEX":"CITROBACTER FREUNDII COMPLEX","ENTEROCOCCUS FAECIUM":"CITROBACTER FREUNDII COMPLEX","PROTEUS MIRABILIS":"CITROBACTER FREUNDII COMPLEX","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"CITROBACTER FREUNDII COMPLEX","PSEUDOMONAS AERUGINOSA":"CITROBACTER FREUNDII COMPLEX","COAG NEGATIVE STAPHYLOCOCCUS":"CITROBACTER FREUNDII COMPLEX","STREPTOCOCCUS AGALACTIAE (GROUP B)":"CITROBACTER FREUNDII COMPLEX","STAPH AUREUS {MRSA}":"CITROBACTER FREUNDII COMPLEX"},"STREPTOCOCCUS MITIS GROUP":{"STREPTOCOCCUS SALIVARIUS GROUP":"STREPTOCOCCUS MITIS GROUP","YEAST":"STREPTOCOCCUS MITIS GROUP","STREPTOCOCCUS PARASANGUINIS":"STREPTOCOCCUS MITIS GROUP"},"NON FERMENTING GRAM NEGATIVE RODS":{"STREPTOCOCCUS GALLOLYTICUS SUBSP. PASTEURIANUS":"NON FERMENTING GRAM NEGATIVE RODS","RHODOTORULA SPECIES":"NON FERMENTING GRAM NEGATIVE RODS","YEAST":"NON FERMENTING GRAM NEGATIVE RODS"},"MORGANELLA MORGANII":{"PASTEURELLA SPECIES":"MORGANELLA MORGANII","STREPTOCOCCUS ANGINOSUS GROUP":"MORGANELLA MORGANII","PSEUDOMONAS AERUGINOSA":"MORGANELLA MORGANII","STAPHYLOCOCCUS AUREUS":"MORGANELLA MORGANII","STREPTOCOCCUS BOVIS GP.":"MORGANELLA MORGANII","PROTEUS MIRABILIS":"MORGANELLA MORGANII"},"ENTEROCOCCUS SPECIES":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS SPECIES","ESCHERICHIA COLI":"ENTEROCOCCUS SPECIES","GRAM NEGATIVE RODS":"ENTEROCOCCUS SPECIES","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS SPECIES","KLEBSIELLA PNEUMONIAE":"ENTEROCOCCUS SPECIES","PSEUDOMONAS AERUGINOSA":"ENTEROCOCCUS SPECIES","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"ENTEROCOCCUS SPECIES","YEAST":"ENTEROCOCCUS SPECIES","KLEBSIELLA OXYTOCA":"ENTEROCOCCUS SPECIES","SERRATIA MARCESCENS":"ENTEROCOCCUS SPECIES","STAPHYLOCOCCUS AUREUS":"ENTEROCOCCUS SPECIES","NON FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS SPECIES","PROTEUS SPECIES":"ENTEROCOCCUS SPECIES","GRAM POSITIVE RODS":"ENTEROCOCCUS SPECIES","LACTOBACILLUS RHAMNOSUS":"ENTEROCOCCUS SPECIES","STENOTROPHOMONAS MALTOPHILIA":"ENTEROCOCCUS SPECIES","STREPTOCOCCUS GORDONII":"ENTEROCOCCUS SPECIES","NON SPORE-FORMING ANAEROBIC GRAM POSITIVE RODS":"ENTEROCOCCUS SPECIES","PREVOTELLA SPECIES":"ENTEROCOCCUS SPECIES","ESCHERICHIA COLI (CARBAPENEM RESISTANT)":"ENTEROCOCCUS SPECIES","STREPTOCOCCUS PARASANGUINIS":"ENTEROCOCCUS SPECIES","KLEBSIELLA AEROGENES (CARBAPENEM RESISTANT)":"ENTEROCOCCUS SPECIES","LACTOBACILLUS SPECIES":"ENTEROCOCCUS SPECIES","STAPH AUREUS {MRSA}":"ENTEROCOCCUS SPECIES"},"ENTEROBACTER CLOACAE COMPLEX":{"ENTEROCOCCUS FAECALIS":"ENTEROBACTER CLOACAE COMPLEX","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROBACTER CLOACAE COMPLEX","ESCHERICHIA COLI":"ENTEROBACTER CLOACAE COMPLEX","ENTEROCOCCUS FAECIUM":"ENTEROBACTER CLOACAE COMPLEX","KLEBSIELLA OXYTOCA":"ENTEROBACTER CLOACAE COMPLEX","STREPTOCOCCUS SALIVARIUS GROUP":"ENTEROBACTER CLOACAE COMPLEX","KLEBSIELLA PNEUMONIAE":"ENTEROBACTER CLOACAE COMPLEX","STREPTOCOCCUS MITIS GROUP":"ENTEROBACTER CLOACAE COMPLEX","PSEUDOMONAS AERUGINOSA":"ENTEROBACTER CLOACAE COMPLEX","STAPHYLOCOCCUS AUREUS":"ENTEROBACTER CLOACAE COMPLEX","GRAM POSITIVE COCCI":"ENTEROBACTER CLOACAE COMPLEX","STENOTROPHOMONAS MALTOPHILIA":"ENTEROBACTER CLOACAE COMPLEX","STREPTOCOCCUS SPECIES":"ENTEROBACTER CLOACAE COMPLEX","ROTHIA MUCILAGINOSA":"ENTEROBACTER CLOACAE COMPLEX","VIRIDANS GROUP STREPTOCOCCI":"ENTEROBACTER CLOACAE COMPLEX","PROTEUS MIRABILIS":"ENTEROBACTER CLOACAE COMPLEX","STREPTOCOCCUS GALLOLYTICUS":"ENTEROBACTER CLOACAE COMPLEX","STREPTOCOCCUS PARASANGUINIS":"ENTEROBACTER CLOACAE COMPLEX","FUNGAL ORGANISMS":"ENTEROBACTER CLOACAE COMPLEX","ENTEROCOCCUS SPECIES":"ENTEROBACTER CLOACAE COMPLEX","STREPTOCOCCUS ANGINOSUS GROUP":"ENTEROBACTER CLOACAE COMPLEX","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"ENTEROBACTER CLOACAE COMPLEX","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"ENTEROBACTER CLOACAE COMPLEX","NON FERMENTING GRAM NEGATIVE RODS":"ENTEROBACTER CLOACAE COMPLEX"},"BETA STREPTOCOCCUS SPECIES":{"STREPTOCOCCUS MITIS GROUP":"BETA STREPTOCOCCUS SPECIES","ESCHERICHIA COLI":"BETA STREPTOCOCCUS SPECIES","COAG NEGATIVE STAPHYLOCOCCUS":"BETA STREPTOCOCCUS SPECIES"},"CANDIDA GLABRATA":{"CANDIDA KRUSEI":"CANDIDA GLABRATA","ENTEROCOCCUS FAECIUM":"CANDIDA GLABRATA","GRAM POSITIVE RODS":"CANDIDA GLABRATA","COAG NEGATIVE STAPHYLOCOCCUS":"CANDIDA GLABRATA","GRAM NEGATIVE RODS":"CANDIDA GLABRATA","KLEBSIELLA PNEUMONIAE":"CANDIDA GLABRATA","CANDIDA LUSITANIAE":"CANDIDA GLABRATA","GRAM POSITIVE COCCI":"CANDIDA GLABRATA","STAPHYLOCOCCUS AUREUS":"CANDIDA GLABRATA","VEILLONELLA SPECIES":"CANDIDA GLABRATA","LACTOBACILLUS SPECIES":"CANDIDA GLABRATA","LACTOSE FERMENTING GRAM NEGATIVE RODS":"CANDIDA GLABRATA","VIRIDANS GROUP STREPTOCOCCI":"CANDIDA GLABRATA","ENTEROCOCCUS SPECIES":"CANDIDA GLABRATA","ESCHERICHIA COLI":"CANDIDA GLABRATA","LACTOBACILLUS RHAMNOSUS":"CANDIDA GLABRATA","STAPH AUREUS {MRSA}":"CANDIDA GLABRATA","PSEUDOMONAS AERUGINOSA":"CANDIDA GLABRATA"},"ENTEROCOCCUS AVIUM":{"ESCHERICHIA COLI":"ENTEROCOCCUS AVIUM","ENTEROCOCCUS FAECALIS":"ENTEROCOCCUS AVIUM","LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS AVIUM","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS AVIUM","KLEBSIELLA PNEUMONIAE":"ENTEROCOCCUS AVIUM","KLEBSIELLA OXYTOCA":"ENTEROCOCCUS AVIUM"},"STREPTOCOCCUS ANGINOSUS GROUP":{"STREPTOCOCCUS MITIS GROUP":"STREPTOCOCCUS ANGINOSUS GROUP","YEAST":"STREPTOCOCCUS ANGINOSUS GROUP"},"STAPHYLOCOCCUS AUREUS":{"STREPTOCOCCUS MITIS GROUP":"STAPHYLOCOCCUS AUREUS","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STAPHYLOCOCCUS AUREUS","STREPTOCOCCUS DYSGALACTIAE":"STAPHYLOCOCCUS AUREUS","STREPTOCOCCUS BOVIS GP.":"STAPHYLOCOCCUS AUREUS","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"STAPHYLOCOCCUS AUREUS","STREPTOCOCCUS SPECIES":"STAPHYLOCOCCUS AUREUS","STREPTOCOCCUS ANGINOSUS GROUP":"STAPHYLOCOCCUS AUREUS","YEAST":"STAPHYLOCOCCUS AUREUS","VIRIDANS GROUP STREPTOCOCCI":"STAPHYLOCOCCUS AUREUS","STREPTOCOCCUS PYOGENES (GROUP A)":"STAPHYLOCOCCUS AUREUS","STREPTOCOCCUS SALIVARIUS GROUP":"STAPHYLOCOCCUS AUREUS"},"GRAM POSITIVE RODS":{"STAPHYLOCOCCUS AUREUS":"GRAM POSITIVE RODS","YEAST":"GRAM POSITIVE RODS","STAPH AUREUS {MRSA}":"GRAM POSITIVE RODS","KLEBSIELLA OXYTOCA":"GRAM POSITIVE RODS","STREPTOCOCCUS ANGINOSUS GROUP":"GRAM POSITIVE RODS","KLEBSIELLA PNEUMONIAE":"GRAM POSITIVE RODS","STREPTOCOCCUS SPECIES":"GRAM POSITIVE RODS","SACCHAROMYCES CEREVISIAE":"GRAM POSITIVE RODS","STREPTOCOCCUS MITIS GROUP":"GRAM POSITIVE RODS","VIRIDANS GROUP STREPTOCOCCI":"GRAM POSITIVE RODS","MICROCOCCUS SPECIES":"GRAM POSITIVE RODS","ROTHIA DENTOCARIOSA":"GRAM POSITIVE RODS","KOCURIA":"GRAM POSITIVE RODS","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"GRAM POSITIVE RODS","PREVOTELLA SPECIES":"GRAM POSITIVE RODS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"GRAM POSITIVE RODS","GRAM VARIABLE RODS":"GRAM POSITIVE RODS","SPHINGOMONAS":"GRAM POSITIVE RODS","PSEUDOMONAS AERUGINOSA":"GRAM POSITIVE RODS","NEISSERIA SPECIES":"GRAM POSITIVE RODS","HAEMOPHILUS PARAINFLUENZAE":"GRAM POSITIVE RODS"},"CANDIDA PARAPSILOSIS COMPLEX":{"PANTOEA AGGLOMERANS":"CANDIDA PARAPSILOSIS COMPLEX","COAG NEGATIVE STAPHYLOCOCCUS":"CANDIDA PARAPSILOSIS COMPLEX","STAPH AUREUS {MRSA}":"CANDIDA PARAPSILOSIS COMPLEX","ENTEROCOCCUS FAECIUM":"CANDIDA PARAPSILOSIS COMPLEX","STAPHYLOCOCCUS AUREUS":"CANDIDA PARAPSILOSIS COMPLEX"},"ACINETOBACTER BAUMANNII COMPLEX":{"OCHROBACTRUM":"ACINETOBACTER BAUMANNII COMPLEX","CANDIDA SPECIES":"ACINETOBACTER BAUMANNII COMPLEX","YEAST":"ACINETOBACTER BAUMANNII COMPLEX","ENTEROCOCCUS FAECIUM":"ACINETOBACTER BAUMANNII COMPLEX","ENTEROCOCCUS FAECALIS":"ACINETOBACTER BAUMANNII COMPLEX","KLEBSIELLA PNEUMONIAE":"ACINETOBACTER BAUMANNII COMPLEX","COAG NEGATIVE STAPHYLOCOCCUS":"ACINETOBACTER BAUMANNII COMPLEX","STAPHYLOCOCCUS AUREUS":"ACINETOBACTER BAUMANNII COMPLEX","STAPH AUREUS {MRSA}":"ACINETOBACTER BAUMANNII COMPLEX","GRAM POSITIVE COCCI":"ACINETOBACTER BAUMANNII COMPLEX","VIRIDANS GROUP STREPTOCOCCI":"ACINETOBACTER BAUMANNII COMPLEX"},"CANDIDA ALBICANS":{"CANDIDA DUBLINIENSIS":"CANDIDA ALBICANS","ENTEROCOCCUS FAECIUM":"CANDIDA ALBICANS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"CANDIDA ALBICANS","CRYPTOCOCCUS NEOFORMANS":"CANDIDA ALBICANS","ENTEROBACTER CLOACAE COMPLEX":"CANDIDA ALBICANS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"CANDIDA ALBICANS","PSEUDOMONAS AERUGINOSA":"CANDIDA ALBICANS","COAG NEGATIVE STAPHYLOCOCCUS":"CANDIDA ALBICANS","CLOSTRIDIUM SPECIES":"CANDIDA ALBICANS","STAPHYLOCOCCUS AUREUS":"CANDIDA ALBICANS","LACTOBACILLUS RHAMNOSUS":"CANDIDA ALBICANS","KLEBSIELLA PNEUMONIAE":"CANDIDA ALBICANS","GRAM NEGATIVE RODS":"CANDIDA ALBICANS","STREPTOCOCCUS MITIS GROUP":"CANDIDA ALBICANS","MOLD":"CANDIDA ALBICANS","CANDIDA TROPICALIS":"CANDIDA ALBICANS","STREPTOCOCCUS PYOGENES (GROUP A)":"CANDIDA ALBICANS","STAPH AUREUS {MRSA}":"CANDIDA ALBICANS","ESCHERICHIA COLI":"CANDIDA ALBICANS","ENTEROCOCCUS AVIUM":"CANDIDA ALBICANS","ENTEROCOCCUS SPECIES":"CANDIDA ALBICANS","CORYNEBACTERIUM STRIATUM":"CANDIDA ALBICANS","STREPTOCOCCUS SANGUINIS":"CANDIDA ALBICANS","STREPTOCOCCUS ANGINOSUS GROUP":"CANDIDA ALBICANS","STREPTOCOCCUS SPECIES":"CANDIDA ALBICANS","CITROBACTER FREUNDII COMPLEX":"CANDIDA ALBICANS","CLOSTRIDIUM SEPTICUM":"CANDIDA ALBICANS"},"KLEBSIELLA AEROGENES":{"KLEBSIELLA PNEUMONIAE":"KLEBSIELLA AEROGENES","PROTEUS MIRABILIS":"KLEBSIELLA AEROGENES","PSEUDOMONAS AERUGINOSA":"KLEBSIELLA AEROGENES","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"KLEBSIELLA AEROGENES","STREPTOCOCCUS GALLOLYTICUS":"KLEBSIELLA AEROGENES","STREPTOCOCCUS BOVIS GP.":"KLEBSIELLA AEROGENES","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"KLEBSIELLA AEROGENES","STAPHYLOCOCCUS AUREUS":"KLEBSIELLA AEROGENES"},"CITROBACTER YOUNGAE":{"KLEBSIELLA PNEUMONIAE":"CITROBACTER YOUNGAE","ENTEROCOCCUS SPECIES":"CITROBACTER YOUNGAE","ESCHERICHIA COLI":"CITROBACTER YOUNGAE","ENTEROCOCCUS FAECIUM":"CITROBACTER YOUNGAE","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"CITROBACTER YOUNGAE","VIRIDANS GROUP STREPTOCOCCI":"CITROBACTER YOUNGAE"},"ENTEROCOCCUS RAFFINOSUS":{"KLEBSIELLA PNEUMONIAE":"ENTEROCOCCUS RAFFINOSUS","ESCHERICHIA COLI":"ENTEROCOCCUS RAFFINOSUS","KLEBSIELLA OXYTOCA":"ENTEROCOCCUS RAFFINOSUS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS RAFFINOSUS","GRAM NEGATIVE RODS":"ENTEROCOCCUS RAFFINOSUS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS RAFFINOSUS","SERRATIA MARCESCENS":"ENTEROCOCCUS RAFFINOSUS"},"BACILLUS SPECIES":{"COAG NEGATIVE STAPHYLOCOCCUS":"BACILLUS SPECIES","PSEUDOMONAS AERUGINOSA":"BACILLUS SPECIES","ENTEROCOCCUS FAECALIS":"BACILLUS SPECIES","ENTEROCOCCUS CASSELIFLAVUS":"BACILLUS SPECIES","CANDIDA GLABRATA":"BACILLUS SPECIES","ENTEROCOCCUS SPECIES":"BACILLUS SPECIES","ESCHERICHIA COLI":"BACILLUS SPECIES","STAPHYLOCOCCUS AUREUS":"BACILLUS SPECIES","KLEBSIELLA PNEUMONIAE":"BACILLUS SPECIES","CANDIDA SPECIES":"BACILLUS SPECIES"},"GEMELLA SPECIES":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"GEMELLA SPECIES","PSEUDOMONAS AERUGINOSA":"GEMELLA SPECIES","VIRIDANS GROUP STREPTOCOCCI":"GEMELLA SPECIES","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"GEMELLA SPECIES"},"AEROMONAS SPECIES":{"CANDIDA GLABRATA":"AEROMONAS SPECIES","KLEBSIELLA PNEUMONIAE":"AEROMONAS SPECIES","ESCHERICHIA COLI":"AEROMONAS SPECIES","YEAST":"AEROMONAS SPECIES"},"ANAEROBIC GRAM POSITIVE COCCI":{"CLOSTRIDIUM CLOSTRIDIOFORME":"ANAEROBIC GRAM POSITIVE COCCI","CANDIDA ALBICANS":"ANAEROBIC GRAM POSITIVE COCCI","GRAM NEGATIVE RODS":"ANAEROBIC GRAM POSITIVE COCCI","PSEUDOMONAS AERUGINOSA":"ANAEROBIC GRAM POSITIVE COCCI","FUSOBACTERIUM NUCLEATUM":"ANAEROBIC GRAM POSITIVE COCCI","BACTEROIDES FRAGILIS":"ANAEROBIC GRAM POSITIVE COCCI","CLOSTRIDIUM SPECIES":"ANAEROBIC GRAM POSITIVE COCCI","STAPHYLOCOCCUS AUREUS":"ANAEROBIC GRAM POSITIVE COCCI","PARABACTEROIDES DISTASONIS":"ANAEROBIC GRAM POSITIVE COCCI","GRAM POSITIVE RODS":"ANAEROBIC GRAM POSITIVE COCCI","STREPTOCOCCUS ANGINOSUS GROUP":"ANAEROBIC GRAM POSITIVE COCCI","STREPTOCOCCUS SPECIES":"ANAEROBIC GRAM POSITIVE COCCI","COAG NEGATIVE STAPHYLOCOCCUS":"ANAEROBIC GRAM POSITIVE COCCI"},"ACHROMOBACTER XYLOSOXIDANS":{"ENTEROCOCCUS FAECIUM":"ACHROMOBACTER XYLOSOXIDANS","ENTEROCOCCUS SPECIES":"ACHROMOBACTER XYLOSOXIDANS","GRAM POSITIVE COCCI":"ACHROMOBACTER XYLOSOXIDANS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ACHROMOBACTER XYLOSOXIDANS","YEAST":"ACHROMOBACTER XYLOSOXIDANS","NON FERMENTING GRAM NEGATIVE RODS":"ACHROMOBACTER XYLOSOXIDANS"},"ROTHIA MUCILAGINOSA":{"VIRIDANS GROUP STREPTOCOCCI":"ROTHIA MUCILAGINOSA","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"ROTHIA MUCILAGINOSA","STREPTOCOCCUS MITIS GROUP":"ROTHIA MUCILAGINOSA","STAPHYLOCOCCUS AUREUS":"ROTHIA MUCILAGINOSA"},"NEISSERIA SPECIES":{"STREPTOCOCCUS SALIVARIUS GROUP":"NEISSERIA SPECIES","STREPTOCOCCUS MITIS GROUP":"NEISSERIA SPECIES","STAPH AUREUS {MRSA}":"NEISSERIA SPECIES","VIRIDANS GROUP STREPTOCOCCI":"NEISSERIA SPECIES","STREPTOCOCCUS PARASANGUINIS":"NEISSERIA SPECIES","ROTHIA DENTOCARIOSA":"NEISSERIA SPECIES"},"EIKENELLA CORRODENS":{"FUSOBACTERIUM NECROPHORUM":"EIKENELLA CORRODENS","STREPTOCOCCUS ANGINOSUS GROUP":"EIKENELLA CORRODENS","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"EIKENELLA CORRODENS","GRAM POSITIVE RODS":"EIKENELLA CORRODENS","HAEMOPHILUS PARAINFLUENZAE":"EIKENELLA CORRODENS"},"PSEUDOMONAS AERUGINOSA":{"STAPH AUREUS {MRSA}":"PSEUDOMONAS AERUGINOSA","STREPTOCOCCUS ANGINOSUS GROUP":"PSEUDOMONAS AERUGINOSA","VIRIDANS GROUP STREPTOCOCCI":"PSEUDOMONAS AERUGINOSA","STAPHYLOCOCCUS AUREUS":"PSEUDOMONAS AERUGINOSA","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"PSEUDOMONAS AERUGINOSA","YEAST":"PSEUDOMONAS AERUGINOSA"},"CANDIDA LUSITANIAE":{"ENTEROBACTER CLOACAE COMPLEX":"CANDIDA LUSITANIAE","LACTOSE FERMENTING GRAM NEGATIVE RODS":"CANDIDA LUSITANIAE","KLEBSIELLA OXYTOCA":"CANDIDA LUSITANIAE","CANDIDA TROPICALIS":"CANDIDA LUSITANIAE","GRAM NEGATIVE RODS":"CANDIDA LUSITANIAE","GRAM POSITIVE RODS":"CANDIDA LUSITANIAE","GRAM VARIABLE RODS":"CANDIDA LUSITANIAE"},"ABIOTROPHIA SPECIES (OR GRANULICATELLA SPECIES)":{"ENTEROCOCCUS FAECALIS":"ABIOTROPHIA SPECIES (OR GRANULICATELLA SPECIES)","STAPHYLOCOCCUS AUREUS":"ABIOTROPHIA SPECIES (OR GRANULICATELLA SPECIES)","CLOSTRIDIUM TERTIUM":"ABIOTROPHIA SPECIES (OR GRANULICATELLA SPECIES)","STREPTOCOCCUS MITIS GROUP":"ABIOTROPHIA SPECIES (OR GRANULICATELLA SPECIES)"},"ENTERIC GRAM NEGATIVE RODS":{"GEMELLA SPECIES":"ENTERIC GRAM NEGATIVE RODS","ENTEROCOCCUS FAECALIS":"ENTERIC GRAM NEGATIVE RODS"},"CITROBACTER SPECIES":{"ENTEROCOCCUS FAECIUM":"CITROBACTER SPECIES","KLEBSIELLA PNEUMONIAE":"CITROBACTER SPECIES","STAPH AUREUS {MRSA}":"CITROBACTER SPECIES","STREPTOCOCCUS SPECIES":"CITROBACTER SPECIES","STREPTOCOCCUS MITIS GROUP":"CITROBACTER SPECIES"},"ANAEROBIC GRAM POSITIVE RODS":{"ESCHERICHIA COLI":"ANAEROBIC GRAM POSITIVE RODS","CANDIDA ALBICANS":"ANAEROBIC GRAM POSITIVE RODS","VIRIDANS GROUP STREPTOCOCCI":"ANAEROBIC GRAM POSITIVE RODS","BACTEROIDES SPECIES":"ANAEROBIC GRAM POSITIVE RODS"},"GRAM NEGATIVE COCCOBACILLI":{"STAPHYLOCOCCUS LUGDUNENSIS":"GRAM NEGATIVE COCCOBACILLI","NON FERMENTING GRAM NEGATIVE RODS":"GRAM NEGATIVE COCCOBACILLI","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"GRAM NEGATIVE COCCOBACILLI","VIRIDANS GROUP STREPTOCOCCI":"GRAM NEGATIVE COCCOBACILLI","YEAST":"GRAM NEGATIVE COCCOBACILLI"},"GRAM NEGATIVE DIPLOCOCCI":{"GRAM POSITIVE COCCI":"GRAM NEGATIVE DIPLOCOCCI","STREPTOCOCCUS SALIVARIUS GROUP":"GRAM NEGATIVE DIPLOCOCCI","STREPTOCOCCUS MITIS GROUP":"GRAM NEGATIVE DIPLOCOCCI"},"CANDIDA DUBLINIENSIS":{"ENTEROCOCCUS FAECIUM":"CANDIDA DUBLINIENSIS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"CANDIDA DUBLINIENSIS","PSEUDOMONAS AERUGINOSA":"CANDIDA DUBLINIENSIS","ENTEROBACTER CLOACAE COMPLEX":"CANDIDA DUBLINIENSIS","PREVOTELLA SPECIES":"CANDIDA DUBLINIENSIS","STAPHYLOCOCCUS AUREUS":"CANDIDA DUBLINIENSIS","COAG NEGATIVE STAPHYLOCOCCUS":"CANDIDA DUBLINIENSIS"},"CITROBACTER KOSERI":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"CITROBACTER KOSERI","KLEBSIELLA PNEUMONIAE":"CITROBACTER KOSERI","ENTEROCOCCUS FAECALIS":"CITROBACTER KOSERI","MORGANELLA MORGANII":"CITROBACTER KOSERI"},"CLOSTRIDIUM RAMOSUM":{"ESCHERICHIA COLI":"CLOSTRIDIUM RAMOSUM","STREPTOCOCCUS ANGINOSUS GROUP":"CLOSTRIDIUM RAMOSUM","STREPTOCOCCUS MITIS GROUP":"CLOSTRIDIUM RAMOSUM"},"STREPTOCOCCUS PARASANGUINIS":{"STREPTOCOCCUS SALIVARIUS GROUP":"STREPTOCOCCUS PARASANGUINIS"},"ANAEROBIC GRAM NEGATIVE RODS":{"GRAM POSITIVE RODS":"ANAEROBIC GRAM NEGATIVE RODS","GRAM POSITIVE COCCI":"ANAEROBIC GRAM NEGATIVE RODS","STREPTOCOCCUS ANGINOSUS GROUP":"ANAEROBIC GRAM NEGATIVE RODS","ANAEROBIC GRAM POSITIVE COCCI":"ANAEROBIC GRAM NEGATIVE RODS","COAG NEGATIVE STAPHYLOCOCCUS":"ANAEROBIC GRAM NEGATIVE RODS","STREPTOCOCCUS SPECIES":"ANAEROBIC GRAM NEGATIVE RODS","VIRIDANS GROUP STREPTOCOCCI":"ANAEROBIC GRAM NEGATIVE RODS"},"BACTEROIDES THETAIOTAOMICRON":{"EUBACTERIUM SPECIES":"BACTEROIDES THETAIOTAOMICRON","GRAM POSITIVE COCCI":"BACTEROIDES THETAIOTAOMICRON","STREPTOCOCCUS SANGUINIS":"BACTEROIDES THETAIOTAOMICRON","LACTOSE FERMENTING GRAM NEGATIVE RODS":"BACTEROIDES THETAIOTAOMICRON","VIRIDANS GROUP STREPTOCOCCI":"BACTEROIDES THETAIOTAOMICRON","SERRATIA MARCESCENS":"BACTEROIDES THETAIOTAOMICRON","ESCHERICHIA COLI":"BACTEROIDES THETAIOTAOMICRON","PSEUDOMONAS SPECIES - NOT P.AERUGINOSA":"BACTEROIDES THETAIOTAOMICRON","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"BACTEROIDES THETAIOTAOMICRON"},"ENTEROCOCCUS GALLINARUM":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"ENTEROCOCCUS GALLINARUM","STENOTROPHOMONAS MALTOPHILIA":"ENTEROCOCCUS GALLINARUM"},"CANDIDA SPECIES":{"OCHROBACTRUM":"CANDIDA SPECIES","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"CANDIDA SPECIES","ENTEROCOCCUS SPECIES":"CANDIDA SPECIES","ENTEROCOCCUS FAECIUM":"CANDIDA SPECIES","GRAM NEGATIVE COCCOBACILLI":"CANDIDA SPECIES","COAG NEGATIVE STAPHYLOCOCCUS":"CANDIDA SPECIES","ESCHERICHIA COLI":"CANDIDA SPECIES","GRAM NEGATIVE RODS":"CANDIDA SPECIES"},"FUSOBACTERIUM NECROPHORUM":{"STREPTOCOCCUS ANGINOSUS GROUP":"FUSOBACTERIUM NECROPHORUM","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"FUSOBACTERIUM NECROPHORUM"},"BURKHOLDERIA CEPACIA COMPLEX":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"BURKHOLDERIA CEPACIA COMPLEX","KLEBSIELLA PNEUMONIAE":"BURKHOLDERIA CEPACIA COMPLEX"},"MORAXELLA OSLOENSIS":{"STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"MORAXELLA OSLOENSIS","STREPTOCOCCUS MITIS GROUP":"MORAXELLA OSLOENSIS","ROSEOMONAS SPECIES":"MORAXELLA OSLOENSIS"},"PROTEUS MIRABILIS":{"STAPHYLOCOCCUS AUREUS":"PROTEUS MIRABILIS","STAPH AUREUS {MRSA}":"PROTEUS MIRABILIS","PROVIDENCIA STUARTII":"PROTEUS MIRABILIS","STREPTOCOCCUS MITIS GROUP":"PROTEUS MIRABILIS","VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"PROTEUS MIRABILIS","PSEUDOMONAS AERUGINOSA":"PROTEUS MIRABILIS"},"CITROBACTER AMALONATICUS":{"KLEBSIELLA PNEUMONIAE":"CITROBACTER AMALONATICUS","PROTEUS MIRABILIS":"CITROBACTER AMALONATICUS","STREPTOCOCCUS MITIS GROUP":"CITROBACTER AMALONATICUS"},"HAEMOPHILUS INFLUENZAE":{"MORGANELLA MORGANII":"HAEMOPHILUS INFLUENZAE","PSEUDOMONAS AERUGINOSA":"HAEMOPHILUS INFLUENZAE","STREPTOCOCCUS ANGINOSUS GROUP":"HAEMOPHILUS INFLUENZAE"},"CANDIDA KRUSEI":{"GRAM POSITIVE RODS":"CANDIDA KRUSEI","CANDIDA LUSITANIAE":"CANDIDA KRUSEI","ENTEROCOCCUS FAECALIS":"CANDIDA KRUSEI","ENTEROCOCCUS FAECIUM":"CANDIDA KRUSEI","KLEBSIELLA PNEUMONIAE":"CANDIDA KRUSEI","VIRIDANS GROUP STREPTOCOCCI":"CANDIDA KRUSEI","GRAM VARIABLE RODS":"CANDIDA KRUSEI","LACTOSE FERMENTING GRAM NEGATIVE RODS":"CANDIDA KRUSEI","ENTEROCOCCUS SPECIES":"CANDIDA KRUSEI","SACCHAROMYCES CEREVISIAE":"CANDIDA KRUSEI"},"BREVIBACTERIUM SPECIES":{"COAG NEGATIVE STAPHYLOCOCCUS":"BREVIBACTERIUM SPECIES","ENTEROCOCCUS CASSELIFLAVUS":"BREVIBACTERIUM SPECIES"},"BACTEROIDES FRAGILIS":{"CLOSTRIDIUM INNOCUUM":"BACTEROIDES FRAGILIS","STREPTOCOCCUS ANGINOSUS GROUP":"BACTEROIDES FRAGILIS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"BACTEROIDES FRAGILIS","ENTEROCOCCUS FAECALIS":"BACTEROIDES FRAGILIS","ESCHERICHIA COLI":"BACTEROIDES FRAGILIS","COAG NEGATIVE STAPHYLOCOCCUS":"BACTEROIDES FRAGILIS","PSEUDOMONAS AERUGINOSA":"BACTEROIDES FRAGILIS","GRAM POSITIVE RODS":"BACTEROIDES FRAGILIS","EGGERTHELLA LENTA":"BACTEROIDES FRAGILIS"},"OCHROBACTRUM":{"YEAST":"OCHROBACTRUM"},"RHODOTORULA SPECIES":{"SPHINGOMONAS":"RHODOTORULA SPECIES"},"AEROCOCCUS URINAE":{"GRAM POSITIVE RODS":"AEROCOCCUS URINAE"},"STREPTOCOCCUS BOVIS GP.":{"VIRIDANS GROUP STREPTOCOCCI":"STREPTOCOCCUS BOVIS GP.","STREPTOCOCCUS MITIS GROUP":"STREPTOCOCCUS BOVIS GP.","STREPTOCOCCUS SPECIES - ALPHA HEMOLYTIC":"STREPTOCOCCUS BOVIS GP."},"EGGERTHELLA LENTA":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"EGGERTHELLA LENTA","PSEUDOMONAS AERUGINOSA":"EGGERTHELLA LENTA"},"ACTINOMYCES ODONTOLYTICUS":{"ANAEROBIC GRAM NEGATIVE RODS":"ACTINOMYCES ODONTOLYTICUS","ANAEROBIC GRAM POSITIVE COCCI":"ACTINOMYCES ODONTOLYTICUS","STREPTOCOCCUS SPECIES":"ACTINOMYCES ODONTOLYTICUS","COAG NEGATIVE STAPHYLOCOCCUS":"ACTINOMYCES ODONTOLYTICUS"},"ACINETOBACTER SPECIES":{"PSEUDOMONAS PUTIDA GROUP":"ACINETOBACTER SPECIES","LACTOCOCCUS SPECIES":"ACINETOBACTER SPECIES"},"RALSTONIA SPECIES":{"SPHINGOMONAS":"RALSTONIA SPECIES","RHODOTORULA SPECIES":"RALSTONIA SPECIES"},"STREPTOCOCCUS AGALACTIAE (GROUP B)":{"STREPTOCOCCUS MITIS GROUP":"STREPTOCOCCUS AGALACTIAE (GROUP B)"},"CARDIOBACTERIUM HOMINIS":{"EIKENELLA CORRODENS":"CARDIOBACTERIUM HOMINIS","GRAM POSITIVE RODS":"CARDIOBACTERIUM HOMINIS","COAG NEGATIVE STAPHYLOCOCCUS":"CARDIOBACTERIUM HOMINIS","HAEMOPHILUS PARAINFLUENZAE":"CARDIOBACTERIUM HOMINIS"},"FUSOBACTERIUM NUCLEATUM":{"GRAM POSITIVE RODS":"FUSOBACTERIUM NUCLEATUM","PARABACTEROIDES DISTASONIS":"FUSOBACTERIUM NUCLEATUM","PREVOTELLA SPECIES":"FUSOBACTERIUM NUCLEATUM"},"CLOSTRIDIUM SPECIES, NOT PERFRINGENS":{"VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"CLOSTRIDIUM SPECIES, NOT PERFRINGENS","PSEUDOMONAS AERUGINOSA":"CLOSTRIDIUM SPECIES, NOT PERFRINGENS","PARVIMONAS MICRA":"CLOSTRIDIUM SPECIES, NOT PERFRINGENS","ENTEROCOCCUS FAECALIS":"CLOSTRIDIUM SPECIES, NOT PERFRINGENS","NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"CLOSTRIDIUM SPECIES, NOT PERFRINGENS","PROTEUS MIRABILIS":"CLOSTRIDIUM SPECIES, NOT PERFRINGENS","ENTEROCOCCUS SPECIES":"CLOSTRIDIUM SPECIES, NOT PERFRINGENS"},"DIPHTHEROIDS - CORYNEBACTERIUM SPECIES":{"GRAM NEGATIVE COCCOBACILLI":"DIPHTHEROIDS - CORYNEBACTERIUM SPECIES","VIRIDANS GROUP STREPTOCOCCI":"DIPHTHEROIDS - CORYNEBACTERIUM SPECIES","GRAM POSITIVE COCCI":"DIPHTHEROIDS - CORYNEBACTERIUM SPECIES","PROPIONIBACTERIUM SPECIES":"DIPHTHEROIDS - CORYNEBACTERIUM SPECIES"},"STREPTOCOCCUS PYOGENES (GROUP A)":{"STREPTOCOCCUS SALIVARIUS GROUP":"STREPTOCOCCUS PYOGENES (GROUP A)"},"AEROCOCCUS VIRIDANS":{"STAPHYLOCOCCUS AUREUS":"AEROCOCCUS VIRIDANS","COAG NEGATIVE STAPHYLOCOCCUS":"AEROCOCCUS VIRIDANS"},"PASTEURELLA SPECIES":{"STREPTOCOCCUS ANGINOSUS GROUP":"PASTEURELLA SPECIES"},"HAEMOPHILUS PARAHAEMOLYTICUS":{"NEISSERIA SPECIES":"HAEMOPHILUS PARAHAEMOLYTICUS","STAPH AUREUS {MRSA}":"HAEMOPHILUS PARAHAEMOLYTICUS"},"PSEUDOMONAS PUTIDA GROUP":{"STENOTROPHOMONAS MALTOPHILIA":"PSEUDOMONAS PUTIDA GROUP"},"CANDIDA PARAPSILOSIS":{"STREPTOCOCCUS PYOGENES (GROUP A)":"CANDIDA PARAPSILOSIS","COAG NEGATIVE STAPHYLOCOCCUS":"CANDIDA PARAPSILOSIS"},"BREVUNDIMONAS":{"MORAXELLA OSLOENSIS":"BREVUNDIMONAS","ROSEOMONAS SPECIES":"BREVUNDIMONAS"},"CLOSTRIDIUM CLOSTRIDIOFORME":{"FUSOBACTERIUM NUCLEATUM":"CLOSTRIDIUM CLOSTRIDIOFORME","PARABACTEROIDES DISTASONIS":"CLOSTRIDIUM CLOSTRIDIOFORME"},"BACTEROIDES VULGATUS":{"CLOSTRIDIUM SPECIES, NOT PERFRINGENS":"BACTEROIDES VULGATUS","PSEUDOMONAS AERUGINOSA":"BACTEROIDES VULGATUS","ESCHERICHIA COLI":"BACTEROIDES VULGATUS","ENTEROCOCCUS FAECIUM":"BACTEROIDES VULGATUS","GRAM POSITIVE RODS":"BACTEROIDES VULGATUS","KLEBSIELLA PNEUMONIAE":"BACTEROIDES VULGATUS","ENTEROCOCCUS SPECIES":"BACTEROIDES VULGATUS"},"AEROMONAS VERONII COMPLEX":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"AEROMONAS VERONII COMPLEX"},"LACTOBACILLUS RHAMNOSUS":{"YEAST":"LACTOBACILLUS RHAMNOSUS"},"GEMELLA MORBILLORUM":{"VIRIDANS GROUP STREPTOCOCCI":"GEMELLA MORBILLORUM","LACTOSE FERMENTING GRAM NEGATIVE RODS":"GEMELLA MORBILLORUM","STREPTOCOCCUS ANGINOSUS GROUP":"GEMELLA MORBILLORUM","GRAM POSITIVE RODS":"GEMELLA MORBILLORUM"},"ACINETOBACTER LWOFFI":{"STAPHYLOCOCCUS AUREUS":"ACINETOBACTER LWOFFI","COAG NEGATIVE STAPHYLOCOCCUS":"ACINETOBACTER LWOFFI","MICROCOCCUS SPECIES":"ACINETOBACTER LWOFFI"},"AEROMONAS CAVIAE COMPLEX":{"ENTEROCOCCUS RAFFINOSUS":"AEROMONAS CAVIAE COMPLEX","KLEBSIELLA PNEUMONIAE":"AEROMONAS CAVIAE COMPLEX","ESCHERICHIA COLI":"AEROMONAS CAVIAE COMPLEX","KLEBSIELLA OXYTOCA":"AEROMONAS CAVIAE COMPLEX"},"MORAXELLA CATARRHALIS":{"VIRIDANS GROUP STREPTOCOCCI NOT S. PNEUMONIAE":"MORAXELLA CATARRHALIS"},"BURKHOLDERIA GLADIOLI":{"PARABACTEROIDES DISTASONIS":"BURKHOLDERIA GLADIOLI"},"PANTOEA SPECIES":{"STAPHYLOCOCCUS AUREUS":"PANTOEA SPECIES"},"PROTEUS SPECIES":{"STAPH AUREUS {MRSA}":"PROTEUS SPECIES","STAPHYLOCOCCUS AUREUS":"PROTEUS SPECIES","STREP. SPECIES - NONHEMOLYTIC":"PROTEUS SPECIES"},"PROVIDENCIA STUARTII":{"STAPH AUREUS {MRSA}":"PROVIDENCIA STUARTII"},"GRAM NEGATIVE COCCI":{"STAPHYLOCOCCUS SPECIES":"GRAM NEGATIVE COCCI","GRAM POSITIVE COCCI":"GRAM NEGATIVE COCCI"},"PARABACTEROIDES DISTASONIS":{"PSEUDOMONAS AERUGINOSA":"PARABACTEROIDES DISTASONIS"},"STREPTOCOCCUS GALLOLYTICUS":{"VIRIDANS GROUP STREPTOCOCCI":"STREPTOCOCCUS GALLOLYTICUS"},"PAENIBACILLUS SPECIES":{"STAPHYLOCOCCUS AUREUS":"PAENIBACILLUS SPECIES"},"SPHINGOMONAS":{"YEAST":"SPHINGOMONAS"},"MICROCOCCUS SPECIES":{"MORAXELLA OSLOENSIS":"MICROCOCCUS SPECIES","STREPTOCOCCUS MITIS GROUP":"MICROCOCCUS SPECIES"},"GLOBICATELLA":{"GRAM POSITIVE RODS":"GLOBICATELLA"},"ENTEROBACTER AEROGENES":{"STREPTOCOCCUS ANGINOSUS GROUP":"ENTEROBACTER AEROGENES","GEMELLA MORBILLORUM":"ENTEROBACTER AEROGENES"},"STENOTROPHOMONAS MALTOPHILIA":{"STREPTOCOCCUS MITIS GROUP":"STENOTROPHOMONAS MALTOPHILIA","STREPTOCOCCUS PARASANGUINIS":"STENOTROPHOMONAS MALTOPHILIA"},"CRYPTOCOCCUS NEOFORMANS":{"YEAST":"CRYPTOCOCCUS NEOFORMANS"},"GRAM VARIABLE RODS":{"YEAST":"GRAM VARIABLE RODS"},"SACCHAROMYCES CEREVISIAE":{"STREPTOCOCCUS ANGINOSUS GROUP":"SACCHAROMYCES CEREVISIAE"},"AGGREGATIBACTER SEGNIS":{"HAEMOPHILUS PARAINFLUENZAE":"AGGREGATIBACTER SEGNIS","CARDIOBACTERIUM HOMINIS":"AGGREGATIBACTER SEGNIS","EIKENELLA CORRODENS":"AGGREGATIBACTER SEGNIS","GRAM POSITIVE RODS":"AGGREGATIBACTER SEGNIS"},"NON SPORE-FORMING ANAEROBIC GRAM POSITIVE RODS":{"PREVOTELLA SPECIES":"NON SPORE-FORMING ANAEROBIC GRAM POSITIVE RODS"},"LACTOBACILLUS SPECIES":{"LACTOCOCCUS SPECIES":"LACTOBACILLUS SPECIES"},"CITROBACTER AMALONATICUS COMPLEX":{"COAG NEGATIVE STAPHYLOCOCCUS":"CITROBACTER AMALONATICUS COMPLEX"},"CORYNEBACTERIUM MINUTISSIMUM":{"STAPH AUREUS {MRSA}":"CORYNEBACTERIUM MINUTISSIMUM"},"FINEGOLDIA MAGNA":{"STAPHYLOCOCCUS LUGDUNENSIS":"FINEGOLDIA MAGNA"},"CANDIDA TROPICALIS":{"ESCHERICHIA COLI":"CANDIDA TROPICALIS","ENTEROCOCCUS FAECALIS":"CANDIDA TROPICALIS","ENTEROCOCCUS FAECIUM":"CANDIDA TROPICALIS","STREPTOCOCCUS MITIS GROUP":"CANDIDA TROPICALIS"},"ENTEROBACTER CLOACAE COMPLEX (CARBAPENEM RESISTANT)":{"ENTEROCOCCUS FAECALIS":"ENTEROBACTER CLOACAE COMPLEX (CARBAPENEM RESISTANT)","ENTEROCOCCUS FAECIUM":"ENTEROBACTER CLOACAE COMPLEX (CARBAPENEM RESISTANT)","ENTEROCOCCUS SPECIES":"ENTEROBACTER CLOACAE COMPLEX (CARBAPENEM RESISTANT)"},"CLOSTRIDIUM SPECIES":{"ENTEROCOCCUS AVIUM":"CLOSTRIDIUM SPECIES","ENTEROCOCCUS SPECIES":"CLOSTRIDIUM SPECIES","ENTEROCOCCUS FAECIUM":"CLOSTRIDIUM SPECIES"},"CORYNEBACTERIUM STRIATUM":{"ENTEROBACTER CLOACAE COMPLEX":"CORYNEBACTERIUM STRIATUM","LACTOSE FERMENTING GRAM NEGATIVE RODS":"CORYNEBACTERIUM STRIATUM"},"PREVOTELLA SPECIES":{"STAPHYLOCOCCUS AUREUS":"PREVOTELLA SPECIES"},"ESCHERICHIA COLI (CARBAPENEM RESISTANT)":{"KLEBSIELLA PNEUMONIAE":"ESCHERICHIA COLI (CARBAPENEM RESISTANT)"},"CANDIDA SPECIES - NOT C.ALBICANS":{"KLEBSIELLA PNEUMONIAE":"CANDIDA SPECIES - NOT C.ALBICANS","LACTOSE FERMENTING GRAM NEGATIVE RODS":"CANDIDA SPECIES - NOT C.ALBICANS"},"CLOSTRIDIUM INNOCUUM":{"COAG NEGATIVE STAPHYLOCOCCUS":"CLOSTRIDIUM INNOCUUM"},"PSEUDOMONAS FLUORESCENS GROUP":{"STAPHYLOCOCCUS AUREUS":"PSEUDOMONAS FLUORESCENS GROUP"},"PANTOEA AGGLOMERANS":{"YEAST":"PANTOEA AGGLOMERANS"},"BACTEROIDES SPECIES":{"COAG NEGATIVE STAPHYLOCOCCUS":"BACTEROIDES SPECIES"},"LACTOCOCCUS SPECIES":{"LACTOSE FERMENTING GRAM NEGATIVE RODS":"LACTOCOCCUS SPECIES"},"CORYNEBACTERIUM SPECIES":{"KLEBSIELLA PNEUMONIAE":"CORYNEBACTERIUM SPECIES"},"FUSOBACTERIUM SPECIES":{"STREPTOCOCCUS MITIS GROUP":"FUSOBACTERIUM SPECIES"},"KOCURIA":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"KOCURIA"},"FUNGAL ORGANISMS":{"NON LACTOSE FERMENTING GRAM NEGATIVE RODS":"FUNGAL ORGANISMS"}},"new":{}};

	//	window for grouping cultures
	// const CTXWINDOW = 2 * 24 * 60 * 60 * 1000; // 2 days
	const CTXWINDOW = 7.05 * 24 * 60 * 60 * 1000; // 7.05 days - specifically to catch one outlier visit

	// 7.05 gives 4787 "visits"; 7 days gives 4790 "visits"

	const CHART1 = $("#chartRow");
	const CHART2 = chartRow2;

	buildDIFFS = function () {
		
		const getAnswer = function (promptStr, defaultStr, acceptable) {
		    let resp = false;
		    while (!resp) {
		        resp = prompt(promptStr, defaultStr);
		        if (acceptable.hasOwnProperty(resp)) {
		            return acceptable[resp](resp);
		        } else {
		            promptStr += "\n\n!!" + resp + " is not an acceptable response, try again."
		            resp = false;
		        }
		    }
		}

		const stopFunction = function () {
			displayDIFFS()
			throw "you asked to stop";
		};

		const displayDIFFS = function () {
			let logger = {
				same: DIFFS.same,
				diff: DIFFS.diff,
				new: {}
			}
			console.log(logger);
			console.log("let DIFFS = " + JSON.stringify(logger) + ";\n");
		};

		// let arr1 = Object.keys(DIFFS.new);


		let b1Arr = Object.keys(DIFFS.new);
		console.log("To compare: "+ b1Arr.map(key => Object.keys(DIFFS.new[key]).length).reduce((a, b) => a + b));
		b1Arr = b1Arr.sort(function (a, b) {
			let suba = DIFFS.new[a];
			let subb = DIFFS.new[b];
		    let b2Arra = Object.keys(suba).map(kk => suba[kk]);
		    let b2Arrb = Object.keys(subb).map(kk => subb[kk]);;
		    let sumb2Arra = b2Arra.reduce((a, b) => a + b);
		    let sumb2Arrb = b2Arrb.reduce((a, b) => a + b);
		    console.log(sumb2Arrb, sumb2Arra)
		    // throw "one is enough...";
		    return sumb2Arrb - sumb2Arra;
		});
		
		b1Arr.forEach(function (b1) {
		    // let b1 = arr1[0];
		    let sub = DIFFS.new[b1];
		    let b2Arr = Object.keys(sub);
		    b2Arr = b2Arr.sort((a, b) => sub[b] - sub[a]);
		    
		    b2Arr.forEach(function (b2) {
		        //strOut += '\t"' + b2 + '": "' + b1 + '",\n';
		        //strOut += '\t"' + b2 + '": "' + b2 + '",\n';
		        getAnswer("Same (count: " + sub[b2] + ")? No: 0, Yes: 1 \n" + b1 + "\n" + b2, "0", {
		            "0": function () { 
		                DIFFS.diff[b1] = DIFFS.diff[b1] || {};
		                DIFFS.diff[b1][b2] = b1;
		            },
		            "1": function () {
		                DIFFS.same[b1] = DIFFS.same[b1] || {};
		                getAnswer("1: " + b1 + "\n-or-\n2: " + b2, "1 OR 2", {
		                    "1": function () {
		                        DIFFS.same[b1][b2] = b1;
		                    },
		                    "2": function () {
		                        DIFFS.same[b1][b2] = b2;
		                    },
		                    "stop": stopFunction
		                })
		            },
		            "stop": stopFunction
		        })
		    });
		});
		
		displayDIFFS();
	};

	const COLORS = [
		'rgb(255, 99, 132)',
		'rgb(54, 162, 235)',
		'rgb(255, 205, 86)'
	];

	const equivalent = function (str1, str2) {
		if (str1 === str2) {
			return str1;
		}
		let strArr = [str1, str2];
		let ret = false;
		strArr = strArr.sort();
		if (strArr[0].match(/^\s*$/)) {
			ret = strArr[1];
		}
		if (DIFFS.same.hasOwnProperty(strArr[0]) && DIFFS.same[strArr[0]].hasOwnProperty(strArr[1])) {
			ret = DIFFS.same[strArr[0]][strArr[1]];
		} else if (!isFinite(strArr[0]) && !(DIFFS.diff.hasOwnProperty(strArr[0]) && DIFFS.diff[strArr[0]].hasOwnProperty(strArr[1]))) {
			DIFFS.new[strArr[0]] = DIFFS.new[strArr[0]] || {};
			DIFFS.new[strArr[0]][strArr[1]] = DIFFS.new[strArr[0]][strArr[1]] || 0;
			DIFFS.new[strArr[0]][strArr[1]] += 1;
		}
		return ret;
	};	

	const simplifyTubeType = function (arr) {
			// does not actually work...
		return arr.map(function (row) {
			row = JSON.parse(JSON.stringify(row));
			if (typeof row[TN] !== "String") {
				let atype = "";
				let str = row[TN].join();
				if (str.match(/[^n]aerobic|^aerobic/i)) {
					atype = "Aerobic";
				}
				if (str.match(/anaerobic/i)) {
					if (atype.length > 0) {
						atype = "Both";
					} else {
						atype = "Anaerobic";
					}
				}
				if (atype) {
					row[TN] = atype;
				}
			}
			return row;
		});
	};

	const addChart = function(addElems, title, CHART) {
		let $elem = $('<canvas>');
		$('<div>', {
				class: "col col-xs-12 col-sm-6 col-md-4 text-center",
				style: "margin-bottom: 2em"
			})
			.append($('<div>', {class: "h3", text: title}))
			.append($elem)
			.append(addElems)
			.appendTo(CHART);

		return $elem;
	};

	let createByDay = function(pageObj) {
		let data = pageObj.flat;
		let $slider = $('<div>', {
			class: "slider-styled slider-square"
		});
		let $elem = addChart($slider, "Positive Cases By Day", CHART1);
		let removed = {};

		const getDataArr = function(data) {
			// 3: "Hours to positivity"
			let hashOfTimes = {};
			let max = 0;
			let min = Infinity;
			data.forEach(function(row) {
				let hours = Math.floor(row[HP] / 24 * 4) / 4;
				hashOfTimes[hours] = hashOfTimes[hours] || 0;
				hashOfTimes[hours] += 1;
				if (max < hours) {
					max = hours;
				}
				if (min > hours) {
					min = hours;
				}
			});

			let labelsArr = [];
			let valuesArr = [];
			min = Math.max(0, min); // Make sure -0.25 does not show up.
			for (let i = min; i <= max + .1; i += 0.25) {
				let val = 0;
				if (hashOfTimes.hasOwnProperty(i)) {
					val = hashOfTimes[i];
				}
				labelsArr.push(i);
				valuesArr.push(val);
			}
			return {
				max: max,
				min: min,
				labels: labelsArr,
				values: valuesArr
			};
		};

		// let arrOfTimes = Object.keys(hashOfTimes).map(a => [a * 1, hashOfTimes[a]]).sort((a, b) => a[0] - b[0]);

		let dataObj = getDataArr(data);

		var ctx = $elem[0];
		var myChart = new Chart(ctx, {
			type: 'bar',
			data: {
				labels: dataObj.labels,
				datasets: [{
					barPercentage: 1,
					categoryPercentage: 0.95,
					label: "Number of Cases",
					data: dataObj.values,
					backgroundColor: COLORS[1],
					// borderWidth: 1
				}]
			},
			options: {
				responsive: true,
				maintainAspectRatio: true,
				aspectRatio: 1,
				scales: {
					y: {
						title: {
							display: true,
							text: "Number of Cases",
							font: {
								size: 20,
								weight: 'bold'
							},
						},
						ticks: {
							font: {
								size: 16
							},
						},
						beginAtZero: true
					},
					x: {
						title: {
							display: true,
							text: "Days Post Collection",
							font: {
								size: 20,
								weight: 'bold'
							},
						},
						ticks: {
							font: {
								size: 16
							},
						}
					}
				},
				plugins: {
					legend: {
						display: false
					},
				}
			}
		});

		// console.log(myChart.options.scales)

		let retObj = {
			update: function() {
				let udata = pageObj.flat;
				let udataObj = getDataArr(udata);
				// console.log(udataObj, udata);
				myChart.data.labels = udataObj.labels;
				myChart.data.datasets[0].data = udataObj.values;
				// console.log(myChart.data.datasets);
				myChart.update();
			},
			filter: data.map(a => 1)
		};

		noUiSlider.create($slider[0], {
			start: [0, dataObj.max + 0.25],
			tooltips: true,
			connect: true,
			step: 0.25,
			range: {
				'min': 0,
				'max': dataObj.max + 0.25
			}
		}).on('change', function(evt) {

			let filterOut = {};
			// 3: "Hours to positivity"
			console.log(evt);
			pageObj.original.flat.forEach(function(row, ind) {
				let days = row[HP] / 24;
				if (days < evt[0] || days > evt[1]) {
					retObj.filter[ind] = 0;
				} else {
					retObj.filter[ind] = 1;
				}
			});
			console.log(evt);
			pageObj.update();
		});
		return retObj;
	};

	const createDonut = function(pageObj, rowInd, chartSettings) {
		let allowed = {};
		let retObj = {
			filter: pageObj.original.flat.map(row => 1)
		};

		let getFilteredData = function () {
			let ddArr = [];
			pageObj.original.flat.forEach(function (row, ind) {
				let countOut = 0;
				let minCount = 1;
				if (!retObj.filter[ind]) {
					minCount += 1;
				}
				pageObj.elements.forEach(function (pageElem) {
					if (!pageElem.filter[ind]) {
						countOut += 1;
					}
				});
				

				// console.log(countOut, minCount);
				if (countOut < minCount) {
					ddArr.push(row);
				}

			});
			// console.log(ddArr);
			return ddArr;
		}

		let getDataArr = function() {
			let data = getFilteredData();
			let organismTally = {};
			let updateColors = 0;
			let colors = COLORS;
			// 6: ['Organism Name']
			data.forEach(function(row) {
				if (rowInd === ON) {
					row[ON].forEach(function(org) {
						organismTally[org] = organismTally[org] || 0;
						organismTally[org] += 1;
					});
				} else {
					organismTally[row[rowInd]] = organismTally[row[rowInd]] || 0;
					organismTally[row[rowInd]] += 1;
				}
			});

			let labelSort = chartSettings.sort || function (a, b) {
				return organismTally[b] * 1 - organismTally[a] * 1;
			};

			let organismTallyArr = Object.keys(organismTally).sort(labelSort);
			let labelArr = organismTallyArr;
			labelArr = labelArr.map(function (a) {
				let ret = a;
				if (chartSettings.labels) {
					ret = chartSettings.labels[a];
				}
				if (!allowed.hasOwnProperty(ret)) {
					allowed[ret] = 1
				} else if(!allowed[a]) {
					updateColors = 1;
				}
				
				return ret;
			});

			if (updateColors) {
				let count = 0;
				colors = labelArr.map(function (org) {
					let ret = "grey";
					if(allowed[org]) {
						ret = colors[count % COLORS.length];
						count += 1;
					}
					return ret;
				});
			}

			// console.log('in update', colors, labelArr);

			return {
				labels: labelArr,
				values: organismTallyArr.map(a => organismTally[a]),
				colors: colors
			};
		};

		let filterOnAllowed = function () {
			retObj.filter = pageObj.original.flat.map(function (row) {
				let ret = 0;
				if (rowInd === ON) {
					ret = 0;
					row[ON].forEach(function (org) {
						if (allowed[org]) {
							ret = 1;
						}
					});
				} else {
					let tt = row[rowInd];
					if  (chartSettings.labels) {
						tt = chartSettings.labels[tt];
					}
					if (allowed[tt]) {
						ret = 1;
					}
				}
				return ret;
			});
		};

		let chartData = getDataArr(pageObj.flat);
		let $btn = $('<button>', {class: 'btn row btn-primary', style: "width:90%; margin-left: 5%;margin-top:10px;", text: 'reset'});
		let $elem = addChart($btn, chartSettings.title, CHART1);

		const figData = {
			labels: chartData.labels,
			datasets: [{
				data: chartData.values,
				backgroundColor: COLORS,
				hoverOffset: 4
			}]
		};
		const config = {
			type: 'doughnut',
			data: figData,
			options: {
				plugins: {
					legend: {
						display: false,
						maxHeight: 0,
						maxWidth: 0,
						position: 'bottom'
					}
				},
				onClick: function (evt) {
					// console.log('clicked', evt);
					let clicked = myChart.getElementsAtEventForMode(evt, 'nearest', { intersect: true }, false);
					// let selectedIndex = activePoints[0]._index;
					evt.native.preventDefault();
					let organismClicked = chartData.labels[clicked[0].element.$context.index];
					if (evt.native.shiftKey || evt.native.metaKey || evt.native.ctrlKey) {
						allowed[organismClicked] = (allowed[organismClicked] + 1) % 2;
					} else if (!allowed[organismClicked]) {
						allowed[organismClicked] = 1;
					} else {
						Object.keys(allowed).forEach(function (org) {
							if (org === organismClicked) {
								allowed[org] = 1;
							} else {
								allowed[org] = 0;
							}
						});
					}
					filterOnAllowed();
					pageObj.update();
				    console.log(allowed, organismClicked, evt.native.shiftKey, evt.native.metaKey, evt.native.ctrlKey);
				}
			}
		};

		$btn.click(function (evt) {
			evt.preventDefault();
			Object.keys(allowed).forEach(function (key) {
				allowed[key] = 1;
			});
			filterOnAllowed();
			pageObj.update();
		})

		var ctx = $elem[0];
		var myChart = new Chart(ctx, config);

		retObj.update = function() {
			let udata = pageObj.flat;
			chartData = getDataArr(udata); // update chartData
			myChart.data.labels = chartData.labels;
			myChart.data.datasets[0].data = chartData.values;
			myChart.data.datasets[0].backgroundColor = chartData.colors;
			// console.log(chartData.colors);
			// console.log(myChart.data.datasets);
			myChart.update();
		};
		return retObj;
	};

	const numSortUp = function (a, b) {
		return a - b;
	};

	const numSortDown = function (a, b) {
		return b - a;
	};

	const getTestName = function (arr) {
		let atype = "";
		let str = arr.join();
		if (str.match(/[^n]aerobic|^aerobic/i)) {
			atype = "Aerobic";
		}
		if (str.match(/anaerobic/i)) {
			if (atype.length > 0) {
				atype = "Both";
			} else {
				atype = "Anaerobic";
			}
		}
		if (atype) {
			return atype;
		}

		return "Unknown";
	}

	const buildGroups = function (data, alldata) {
		// look for partners
		let uniqueCultures = [];
		console.log("data here", data, alldata);
		data.forEach(function (person, allDataIndex) {
			// let person = data[3221]; // test place
			let byWindow = [];
			// if (allDataIndex === 146) {
			// 	console.warn('looking here before grouping', JSON.parse(JSON.stringify(person)));
			// }
			person.forEach(function (culture, jj) {
				culture.personIndex = allDataIndex;
				culture.personLink = alldata[allDataIndex];
				let partnerFound = false;

				//checking to see if there is a culture that was taken around the same time
					// as another we have already looked at
				byWindow.forEach(function (cultureGroup, i) {
					cultureGroup.forEach(function (cmpCulture) {
						let timeDiff = Math.abs(new Date(cmpCulture[2]) - new Date(culture[2]));
						if (timeDiff < CTXWINDOW) {
							partnerFound = i + 1; // adding for more simple 'if' statement
						}
					});
				});

				if (partnerFound) {
					byWindow[partnerFound - 1].push(culture);
				} else {
					byWindow.push([culture]);
				}
			});
			// if (allDataIndex === 1980) {
			// 	console.log("check this out", byWindow, person);
			// }
			uniqueCultures = uniqueCultures.concat(byWindow);
		});

		//console.log('partnered up', uniqueCultures);

		console.log('in and out size', data.length, uniqueCultures.length);

		// unique cultures are unique culture groups based on the number of days between
		// positive tests

		//now fold culture results when possible and simplify data object
		return uniqueCultures.map(function (ctxGroup) {

			// 0: "Test Name"
			// 1: "Collection Year"
			// 2: "Randomized Collect Time"
			// 3: "Hours to positivity"
			// 4: "False Positive"
			// 5: "Positive/Negative"
			// 6: ['Organism Name']

			let output = [];
			
			let visitTubes = ctxGroup.length;

			// if (ctxGroup[0].personIndex === 146) {
			// 	console.warn('looking here, should be 2, actually 3', JSON.parse(JSON.stringify(ctxGroup)));
			// }

			// attempt to simplify organisms
			let uniqueOrganisms;
			let organisms = ctxGroup.map(function (arr, ind1) {
				// filter out things called false positive
				// if (arr[4]) {
					// return [];
				//}
				// return arr[6];

				return arr[ON].map(function (org, ind2) {
					return [org, ind1, ind2]
				});
			})
			.reduce((a, b) => a.concat(b));

			// store unique names
			let screened = false;
			// console.log("starting", JSON.parse(JSON.stringify(organisms)));
			while (!screened) {
				screened = true;
				let len = organisms.length;
				if (len > 1) {
					for (let i = 0; i < len; i += 1) {
						for (let j = i + 1; j < len; j +=1) {
							let org1 = organisms[i][0];
							let org2 = organisms[j][0];
							let test = equivalent(org1, org2);
							if (test && org1 !== org2) {
								organisms[i][0] = test;
								organisms[j][0] = test;
								screened = false;
							}
						}
					}
				}
			}

			// fold to unique
			let uniqueOrgsHash = {};
			organisms.forEach(function (orgArr) {
				let org = orgArr[0];

				uniqueOrgsHash[org] = uniqueOrgsHash[org] || {
					testName: [],
					year: [],
					collectTime: [],
					hoursToPositive: [],
					falsePositive: [],
					dataLink: ctxGroup[orgArr[1]].personLink,
					indexLink: ctxGroup[orgArr[1]].personIndex,
					organisms: org,
					visitTubes: visitTubes,
					organismTubes: 0
				};

				// 0: "Test Name"
				// 1: "Collection Year"
				// 2: "Randomized Collect Time"
				// 3: "Hours to positivity"
				// 4: "False Positive"
				// 5: "Positive/Negative"
				// 6: ['Organism Name']


				uniqueOrgsHash[org].testName.push(getTestName(ctxGroup[orgArr[1]][TN]));
				uniqueOrgsHash[org].year.push(ctxGroup[orgArr[1]][CY]);
				uniqueOrgsHash[org].collectTime.push(ctxGroup[orgArr[1]][CT]);
				uniqueOrgsHash[org].hoursToPositive.push(ctxGroup[orgArr[1]][HP]);
				uniqueOrgsHash[org].falsePositive.push(ctxGroup[orgArr[1]][FP]);
				uniqueOrgsHash[org].organismTubes += 1;
			});

			// Looking for duplication event for this case
			if (ctxGroup[0][2] === 'Wed Oct 29 2008 11:05:00 GMT-0700 (Pacific Daylight Time)') {
				console.log("looking here...", ctxGroup, uniqueOrgsHash, organisms);
			}
			
			//return final object
			return Object.keys(uniqueOrgsHash).map(org => uniqueOrgsHash[org]);

		})
		// .reduce((a, b) => a.concat(b))
		.map(function (cultureGroup) {
			return cultureGroup.map(function (culture) {
				let linkedDraws = [];
				let linkedHash = {};
				let times = JSON.parse(JSON.stringify(culture.collectTime));
				let allTimes = culture.dataLink.map(a => a[2]);

				let added = true;

				while(added) {
					added = false;
					times.sort(function (a, b) {
						return new Date(a) - new Date(b);
					});
					let windowStart = new Date(times[0]) * 1 - CTXWINDOW;
					let windowStop = new Date(times[times.length - 1]) * 1 + CTXWINDOW;

					allTimes = allTimes.map(function (time, ind) {
						let thisTime = new Date(time);
						if (thisTime * 1 > windowStart && thisTime * 1 < windowStop) {
							linkedHash[ind] = 1;
							times.push(time);
							added = true;
						}
					});
				}

				culture.linkedDraws = Object.keys(linkedHash).map(a => culture.dataLink[a]);
				return culture;
			});
		});
	};

	const byOrgCreateDonut = function (pageObj, functionObj) {
		let allowed = {};
		let retObj = {
			filter: pageObj.data.map(rows => rows.map(row => 1))
		};

		// console.log(pageObj.data, retObj.filter);
		// throw "stopping";


		let getFilteredData = function () {
			let ddArr = [];
			pageObj.data.forEach(function (rows, ind) {
				let countOut = 0;
				let minCount = 1;
				let outRows = rows.filter(function (row, rowindex) {
					// now we need to check if this is filtered out by something else or by this filter
					let countOut = 0;
					let minCount = 1;

					// If filtered out only here, then we will keep it 
					if (!retObj.filter[ind][rowindex]) {
						minCount += 1;
					}

					pageObj.elements.forEach(function (pageElem) {
						if (pageElem.filter[ind][rowindex] === 0) {
							countOut += 1;
						}
					});

					if (countOut < minCount) { // if multiple filters have ruled this out
						return true;
					}
					return false;
				})

				// console.log(countOut, minCount);
				if (outRows.length) {
					ddArr.push(outRows);
				}
			});
			// console.log("is this filtered??", ddArr);
			return ddArr;
		};

		let getDataArr = function() {
			let data = getFilteredData();
			let organismTally = {};
			let updateColors = 0;
			let colors = COLORS;
			// 6: ['Organism Name']
			data.forEach(function(row) {
				let cat = functionObj.dataFunc(row);
				if (!Array.isArray(cat)) {
					cat = [cat];
				}
				cat.forEach(function (onecat) {
					organismTally[onecat] = organismTally[onecat] || 0;
					organismTally[onecat] += 1;
				})
			});

			let labelSort = functionObj.sort || function (a, b) {
				let diff = organismTally[b] * 1 - organismTally[a] * 1;
				if (diff === 0) {
					if (a.toUpperCase() > b.toUpperCase()) {
						diff = 1
					} else if (b.toUpperCase() > a.toUpperCase()) {
						diff = -1;
					}
				}
				return diff;
			};

			let organismTallyArr = Object.keys(organismTally).sort(labelSort);
			let labelArr = organismTallyArr;
			labelArr = labelArr.map(function (a) {
				let ret = a;
				if (functionObj.labels) {
					ret = functionObj.labels[a];
				}
				if (!allowed.hasOwnProperty(ret)) {
					allowed[ret] = 1
				} else if(!allowed[a]) {
					updateColors = 1;
				}
				
				return ret;
			});

			if (updateColors) {
				let count = 0;
				colors = labelArr.map(function (org) {
					let ret = "grey";
					if(allowed[org]) {
						ret = colors[count % COLORS.length];
						count += 1;
					}
					return ret;
				});
			}

			// console.log('in update', colors, labelArr);

			return {
				labels: labelArr,
				values: organismTallyArr.map(a => organismTally[a]),
				colors: colors
			};
		};

		let filterOnAllowed = function () {
			retObj.filter = pageObj.data.map(function (rows) {
				let retArr = [];

				retArr = rows.map(function (row) {
					let ret = 0;
					let tt = functionObj.dataFunc([row]);

					if (!Array.isArray(tt)) {
						tt = [tt];
					}

					tt.forEach(function (aa) {
						if (allowed[aa]) {
							ret = 1;
						}
					});

					return ret;
				});

				return retArr;
			});
			console.log('filtered...', retObj.filter, pageObj.data)
		};

		let chartData = getDataArr(pageObj.data);
		let $btn = $('<button>', {class: 'btn row btn-primary', style: "width:90%; margin-left: 5%;margin-top:10px;", text: 'reset'});
		let $elem = addChart($btn, functionObj.title, CHART2);

		const figData = {
			labels: chartData.labels,
			datasets: [{
				data: chartData.values,
				backgroundColor: COLORS,
				hoverOffset: 4
			}]
		};
		const config = {
			type: 'doughnut',
			data: figData,
			options: {
				plugins: {
					legend: {
						display: false,
						maxHeight: 0,
						maxWidth: 0,
						position: 'bottom'
					}
				},
				onClick: function (evt) {
					// console.log('clicked', evt);
					let clicked = myChart.getElementsAtEventForMode(evt, 'nearest', { intersect: true }, false);
					// let selectedIndex = activePoints[0]._index;
					evt.native.preventDefault();
					let organismClicked = chartData.labels[clicked[0].element.$context.index];
					if (evt.native.shiftKey || evt.native.metaKey || evt.native.ctrlKey) {
						allowed[organismClicked] = (allowed[organismClicked] + 1) % 2;
					} else if (!allowed[organismClicked]) {
						allowed[organismClicked] = 1;
					} else {
						Object.keys(allowed).forEach(function (org) {
							if (org === organismClicked) {
								allowed[org] = 1;
							} else {
								allowed[org] = 0;
							}
						});
					}
					filterOnAllowed();
					pageObj.update();
				    console.log("allowed", allowed, organismClicked, evt.native.shiftKey, evt.native.metaKey, evt.native.ctrlKey);
				}
			}
		};

		$btn.click(function (evt) {
			evt.preventDefault();
			Object.keys(allowed).forEach(function (key) {
				allowed[key] = 1;
			});
			filterOnAllowed();
			pageObj.update();
		});

		var ctx = $elem[0];
		var myChart = new Chart(ctx, config);

		retObj.update = function() {
			let udata = pageObj.filtered;
			chartData = getDataArr(udata); // update chartData
			myChart.data.labels = chartData.labels;
			myChart.data.datasets[0].data = chartData.values;
			myChart.data.datasets[0].backgroundColor = chartData.colors;
			// console.log(chartData.colors);
			// console.log(myChart.data.datasets);
			myChart.update();
		};
		return retObj;
	}

	const byOrgMinDays = function (pageObj, functionObj) {
		let data = pageObj.flat;
		let $slider = $('<div>', {
			class: "slider-styled slider-square"
		});
		let $elem = addChart($slider, functionObj.label, CHART2);
		let removed = {};

		const getDataArr = function(data) {
			// 3: "Hours to positivity"
			let hashOfTimes = {};
			let max = 0;
			let min = Infinity;
			data.forEach(function(row) {
				let days = functionObj.dataFunc(row);
				days = Math.floor(days / 24 * 4) / 4;
				hashOfTimes[days] = hashOfTimes[days] || 0;
				hashOfTimes[days] += 1;
				if (max < days) {
					max = days;
				}
				if (min > days) {
					min = days;
				}
			});

			let labelsArr = [];
			let valuesArr = [];
			min = Math.max(0, min); // make sure -0.25 does not show up
			for (let i = min; i <= max + .1; i += 0.25) {
				let val = 0;
				if (hashOfTimes.hasOwnProperty(i)) {
					val = hashOfTimes[i];
				}
				labelsArr.push(i);
				valuesArr.push(val);
			}
			return {
				max: max,
				min: min,
				labels: labelsArr,
				values: valuesArr
			};
		};

		// let arrOfTimes = Object.keys(hashOfTimes).map(a => [a * 1, hashOfTimes[a]]).sort((a, b) => a[0] - b[0]);

		let dataObj = getDataArr(pageObj.data);

		console.log('for bar chart...', dataObj)

		var ctx = $elem[0];
		var myChart = new Chart(ctx, {
			type: 'bar',
			data: {
				labels: dataObj.labels,
				datasets: [{
					barPercentage: 1,
					categoryPercentage: 0.95,
					label: "Number of Cases",
					data: dataObj.values,
					backgroundColor: COLORS[1],
					// borderWidth: 1
				}]
			},
			options: {
				responsive: true,
				maintainAspectRatio: true,
				aspectRatio: 1,
				scales: {
					y: {
						title: {
							display: true,
							text: "Number of Cases",
							font: {
								size: 20,
								weight: 'bold'
							},
						},
						ticks: {
							font: {
								size: 16
							},
						},
						beginAtZero: true
					},
					x: {
						title: {
							display: true,
							text: "Days Post Collection",
							font: {
								size: 20,
								weight: 'bold'
							},
						},
						ticks: {
							font: {
								size: 16
							},
						}
					}
				},
				plugins: {
					legend: {
						display: false
					},
				}
			}
		});

		// console.log(myChart.options.scales)

		let retObj = {
			update: function() {
				let udata = pageObj.filtered;
				let udataObj = getDataArr(udata);
				console.log(udataObj, udata);
				myChart.data.labels = udataObj.labels;
				myChart.data.datasets[0].data = udataObj.values;
				// console.log(myChart.data.datasets);
				myChart.update();
			},
			filter: pageObj.data.map(a => a.map(b => 1))
		};

		noUiSlider.create($slider[0], {
			start: [0, dataObj.max + 0.25],
			tooltips: true,
			connect: true,
			step: 0.25,
			range: {
				'min': 0,
				'max': dataObj.max + 0.25
			}
		}).on('change', function(evt) {

			// let filterOut = {};
			// 3: "Hours to positivity"
			console.log(evt);
			pageObj.data.forEach(function(rows, ind) {
				rows.forEach(function (row, rowind) {
					let days = functionObj.dataFunc([row]) / 24;
					if (days < evt[0] || days > evt[1]) {
						retObj.filter[ind][rowind] = 0;
					} else {
						retObj.filter[ind][rowind] = 1;
					}
				});
			});
			console.log(evt);
			pageObj.update();
		});
		return retObj;
	};

	const buildPage = function(data) {
		console.log("Data in", data);
		let dataStoreForGroup2 = JSON.parse(JSON.stringify(data));
		let flattened = data.data.reduce((a, b) => a.concat(b));

		// 0: "Test Name"
		// 1: "Collection Year"
		// 2: "Randomized Collect Time"
		// 3: "Hours to positivity"
		// 4: "False Positive"
		// 5: "Positive/Negative"
		// 6: ['Organism Name']

		// 0: "False Positive"
		// 1: "Collection Year"
		// 2: "Randomized Collect Time"
		// 3: "Positive/Negative"
		// 4: ['Organism Name']
		// 5: "Test Name"
		// 6: "Test Positivity Date/Time"
		// 7: "Hours to positivity"

		let dataObjOne = JSON.parse(JSON.stringify(data));
		dataObjOne.data = dataObjOne.data.map(a => simplifyTubeType(a));
		let flattenedOne = JSON.parse(JSON.stringify(flattened));
		flattenedOne = simplifyTubeType(flattenedOne);	

		console.log(dataObjOne, flattenedOne)

		let pageObj = {
			original: {
				data: data.data,
				flat: simplifyTubeType(flattened)
			},
			elements: [],
			data: dataObjOne,
			flat: flattenedOne
		};
		pageObj.elements = [
			createByDay(pageObj),
			createDonut(pageObj, ON, {title: "Organism Isloated"}),
			createDonut(pageObj, FP, {title: "Algorithmically True/False Positive", sort: numSortUp, labels:{"0": "True Positive", "1": "False Positive"}}),
			createDonut(pageObj, TN, {title: "Positive Test Type"}),
			createDonut(pageObj, CY, {title: "Positive Cases By Year", sort: numSortUp}),
		];
		pageObj.update = function() {
			pageObj.flat = pageObj.original.flat.filter(function(row, ind) {
				let ret = true;
				pageObj.elements.forEach(function (elemObj) {
					if (!elemObj.filter[ind]) {
						ret = false;
					}
				});
				return ret;
			})
			pageObj.elements.forEach(a => a.update());
		};

		console.log("Page object", pageObj);

		// build out group cases
		let byVisitOrg = buildGroups(dataStoreForGroup2.data, dataStoreForGroup2.alldata.data);

		//build based on one pt for testing
		// let byVisitOrg = buildGroups([dataStoreForGroup2.data[299]], [dataStoreForGroup2.alldata.data[299]]);
		
		console.log("New comparisons", DIFFS.new)
		console.log("Organized by organisms", byVisitOrg);

		// create page object to handle interactive components
		let pageObj2 = {
			elements: [],
			data: JSON.parse(JSON.stringify(byVisitOrg)),
			filtered: JSON.parse(JSON.stringify(byVisitOrg))
		};

		// testName
		// year
		// collectTime
		// hoursToPositive
		// falsePositive
		// organisms
		// visitTubes
		// organismTubes

		// throw pageObj2;

		const PRINTER = -1;

		pageObj2.elements = [
			byOrgMinDays(pageObj2, {
				dataFunc: function (rows) {
					let theVals = rows.map(function (row) {
						// row = rows[0]; // should be the same for all organisms?
						let minPosDate = new Date();
						let minPosDrawDate = new Date();
						let minDrawDate = new Date();
						let thisOrganism = row.organisms;
						// let negs = [];
						// let poss = [];
						row.linkedDraws.forEach(function (entry) {
							let drawDate = new Date(entry[2])
							minDrawDate = Math.min(minDrawDate, drawDate);
							if (!entry[3].match(/Neg/i)) {
								// check to see if organism is a match
								let organismList = entry[4];
								let match = false;
								organismList.forEach(function (organism) {
									if (equivalent(organism, thisOrganism)) {
										match = true;
									}
								});
								if (match) {
									let posDate = new Date(entry[5][1]);
									if (!entry[5][1]) {
										posDate = new Date(drawDate * 1 + 1000 * 60 * 60 * 24 * 4.5); // default in 4.5 days
										// console.log("No positive date from bactec file?", row, posDate);
									}
									minPosDate = Math.min(minPosDate, posDate);
									minPosDrawDate = Math.min(minPosDrawDate, drawDate);
								}
							}
						});
						let value2 = (minPosDate - minPosDrawDate) / 1000 / 60 / 60;
						if (value2 > 24 * 10) {
							console.log("noise", (new Date(minPosDate)).toLocaleDateString(), (new Date(minDrawDate)).toLocaleDateString(), value2 / 24, row);
						}
						// console.log(value2, row, minPosDate, minPosDrawDate)
						let value = Math.max.apply(null, row.hoursToPositive);
						return value2;
					});
					let outval = theVals.reduce(function (a, b) {
						if (a === b) {
							return a;
						} else {
							// console.log("different...", theVals, rows);
							return Math.max(a, b);
						}
					});

					if (rows[0].indexLink === PRINTER) {
						console.log('make sure this is right...', 'min days to dx', rows, outval, theVals);
					}
					return outval;
				},
				label: "Days to Diagnosis (By Organism)"
			}),
			byOrgMinDays(pageObj2, {
				dataFunc: function (row) {
					let value = Infinity;
					row.forEach(function (organism) {
						let minvalue = Math.min.apply(null, organism.hoursToPositive);
						value = Math.min(minvalue, value);
					});

					if (row[0].indexLink === PRINTER) {
						console.log('make sure this is right...', 'min days', row, value);
					}
					// let value = Math.min.apply(null, row.hoursToPositive);
					return value;
				},
				label: "Minimum days to positivity"
			}),
			byOrgMinDays(pageObj2, {
				dataFunc: function (row) {
					let value = -Infinity;
					row.forEach(function (organism) {
						let maxvalue = Math.max.apply(null, organism.hoursToPositive);
						value = Math.max(maxvalue, value);
					});
					if (row[0].indexLink === PRINTER) {
						console.log('make sure this is right...', 'max days', row, value);
					}
					return value;
				},
				label: "Maximum days to positivity"
			}),
			byOrgCreateDonut(pageObj2, {
				dataFunc: function (row) {
					// if (row[0].indexLink === PRINTER) {
					// 	console.log('make sure this is right...', 'max days', row, row.map(a => a.organisms));
					// }
					return row.map(a => a.organisms);
				},
				title: "Organism Isloated"
			}),
			byOrgCreateDonut(pageObj2, {
				dataFunc: function (row) {
					// console.log(row);

					let thisOut = row.map(a=> a.testName).reduce(function (a, b) {
						if (a[0] === b[0]) {
							 return [a];
						}
						return ["Both"];
					})[0];
					// return 0;
					if (row[0].indexLink === PRINTER) {
						console.log('make sure this is right...', 'max days', row, thisOut);
					}

					return thisOut;

				}, 
				title: "Positive Test Type"
			}),
			byOrgCreateDonut(pageObj2, {
				dataFunc: function (row) {
					// let sol = "True Positive";
					// row.map(function (groups) {
					// 	let value = Math.max.apply(null, groups.falsePositive);
					// 	if (value === 1) {
					// 		sol = "False Positive";
					// 	}
					// });

					let sol = "False Positive";
					// let maxVal = 0;
					row.map(function (groups) {
						// let maxVal1 = Math.max.apply(null, groups.falsePositive);
						// maxVal = Math.max(maxVal, maxVal1);
						let value = Math.min.apply(null, groups.falsePositive);
						if (value !== 1) {
							sol = "True Positive";
						}
					});

					// if (sol === "True Positive" && maxVal) {
					// 	console.log("added?", row);
					// }

					if (row[0].indexLink === PRINTER) {
						console.log('make sure this is right...', 'max days', row, sol);
					}

					return sol;
				},
				title: "Algorithmically True/False Positive",
				sort: numSortUp,
				// labels:{"0": "True Positive", "1": "False Positive"}
			}),
			byOrgCreateDonut(pageObj2, {
				dataFunc: function (row) {
					// Just return the result from the first organism
					return row[0].visitTubes;
				},
				title: "Positive Draws With Any Growth"
			}),
			byOrgCreateDonut(pageObj2, {
				dataFunc: function (row) {
					// Just return the result from the first organism
					return row[0].organismTubes;
				},
				title: "Positive Draws With Organism"
			}),
		]

		pageObj2.update = function() {
			pageObj2.filtered = [];
			pageObj2.data.forEach(function(rows, ind) {
				let outer = rows.filter(function (rows, rowind) {
					let stillin = true;
					pageObj2.elements.forEach(function (elemObj) {
						if (elemObj.filter[ind][rowind] === 0) {
							stillin = false;
						}
					});
					return stillin;
				})
				if (outer.length) {
					pageObj2.filtered.push(outer);
				}
			});

			console.log("last bottom filter", pageObj2.filtered);

			makeTimeLines(pageObj2.filtered);

			pageObj2.elements.forEach(a => a.update());
		};
	};

	const makeTimeLines = function (list) {
		console.log("Filtered list", list, list[0]);


		let $container = $('#visualization');
		let buildOnce = false;
		$container.empty();
		$('.popover').remove();
		
		let $btnHold = $('<div class="d-grid gap-2">');
		let $btn = $('<button>', {
			class: "btn btn-primary",
			type: "button",
			text: "Build " + Math.min(20, list.length) + " of " + list.length + " Timelines"
		}).click(function () {
			if (!buildOnce) {
				buildOnce = true;
				for (let i = 0; i < Math.min(20, list.length); i += 1) {
					makeATimeline(list[i]);
					$container.append("<p></p>"); // add some white space
				}
			}
		});		

		$btnHold.append($btn).appendTo($container);
	};

	const makeATimeline = function (result) {
		console.log('here is the result in', result);
		// return;
		let patientData = JSON.parse(JSON.stringify(result[0].dataLink));

		patientData.map(function (row) {
			if (row[3].match(/Pos/i) && row[5].length === 0) {
				// for the few cases where there is no data on bactec ttp
				// default in 4.5 days, all of these have multiple positives
				let plusDays = new Date(new Date(row[2]) + 4.5 * 24 * 60 * 60 * 1000);
				row[5] = [
					["unknown"],
					plusDays.toString(),
					108.014776974,
					plusDays.toString(),
					108.014776974
				];
				console.log('adding in fake data (4.5 days, 108 hrs)', patientData);
			}
		});

		let minYear = patientData.map(dd => dd[CY]).reduce(function (a, b) {
			return Math.min(a * 1, b * 1);
		});
		let minDate = patientData.map(dd => new Date(dd[CT])).reduce(function (a, b) {
			return Math.min(a, b);
		});
		let maxDate = patientData.map(dd => new Date(dd[CT])).reduce(function (a, b) {
			return Math.max(a, b);
		});

		let baseDate = new Date(minDate);
		minDate = new Date(minDate)
		baseDate.setYear(minYear);
		maxDate = new Date(maxDate * 1 + baseDate * 1 - minDate * 1)

		// console.log(baseDate, minDate, "dates");

		let itemsArr = patientData.map(function (sample, index) {
			let testRandomDate = new Date(sample[CT]);
			let theDate = new Date(baseDate * 1 + testRandomDate * 1 - minDate * 1);

			maxDate = Math.max(maxDate, theDate);

			let baseEvt = {
				id: index,
				start: theDate.toString(),
			}

			if (sample[PN] === "Positive") {
				//baseEvt.content = sample[ON].join(", ");
				// byDate[baseEvt.start] = sample[ON].join(", ");
				baseEvt.content = "POS";
				baseEvt.full = sample[ON].map(function (organism) {
					let thisRet = organism.toLowerCase();
					thisRet = thisRet[0].toUpperCase() + thisRet.slice(1);
					return thisRet;
				}).join(", ");
				baseEvt.ttp = sample[5][2];
				let endDate = new Date(theDate * 1 + sample[EXTRA][EXTRA_HP] * 60 * 60 * 1000)
				maxDate = Math.max(maxDate, endDate);
				baseEvt.end = endDate.toString();
				// if (isNaN(baseEvt.end)) {
				console.log("NaN with pos?", baseEvt);
				// }
				baseEvt.style = "min-width: 5rem;";
			} else {
				// baseEvt.group = "Negtive"; // did not work.
				baseEvt.content = "NEG";
				// baseEvt.end = baseEvt.start;
				console.log("NaN with neg?", baseEvt);
			}
			return baseEvt;
		});

		// console.log("items", itemsArr, new Date(baseDate), new Date(maxDate));

		let startTime = new Date(new Date(result[0].collectTime[0]) * 1 + baseDate * 1 - minDate * 1 - 1000 * 60 * 60 * 24);

		// start
		var container = document.getElementById('visualization');
		let options = {
			min: baseDate - 1000 * 60 * 60 * 24 * 365 / 4,
			max: maxDate + 1000 * 60 * 60 * 24 * 365 / 4,
			zoomMin: 1000 * 60 * 60 * 24 * 7,
			zoomMax: 1000 * 60 * 60 * 24 * 365 * 2,
			zoomFriction: 8,
			start: startTime,
			end: new Date(startTime * 1 + 1000 * 60 * 60 * 24 * 7)
		};
		
		let items = new vis.DataSet(itemsArr);
		// let items = new vis.DataSet(itemsArr.filter(a => a.end));
		// console.log('before process??', itemsArr, 'after process??', items);
		let timeline = new vis.Timeline(container, items, options);

		timeline.on('itemover', function (event) {
		  // console.log(event, event.time.toString(), byDate);
			let $elem = $(event.event.target);

			itemsArr[event.item].popover = itemsArr[event.item].popover || false;

			if (!itemsArr[event.item].popover) {
				itemsArr[event.item].popover = true;
				let orgString = "Negative";
				if (itemsArr[event.item].full) {
					orgString = itemsArr[event.item].full + "<br />" + Math.round(itemsArr[event.item].ttp / 24 * 10) / 10 + " days to positive";
				}
				if (itemsArr[event.item].ttp === 108.014776974) {
					orgString += "*<br />* No time to positive known due to test issue, assumed 4.5 days for analysis.";
				}
				orgString += "<br />Collection: " + itemsArr[event.item].start.toString();
				let maxLoop = 3;
				let loopCount = 0;
				while (!$elem.hasClass("vis-item") && loopCount < maxLoop) {
					loopCount += 1;
					$elem = $elem.parent();
				}
				if ($elem.hasClass("vis-item")) {
					$elem.attr("data-toggle", "popover");
					$elem.attr("data-bs-html", "true");
					// $elem.attr("data-trigger", "focus");
					// $elem.attr("data-container", "body");
					// $elem.attr("data-bs-title", "Popover title");
					$elem.attr("data-bs-content", orgString);
					// let thisPopper = $elem.popover();
					let thisPopper = new bootstrap.Popover($elem)

					timeline.on('rangechange', function () {
						thisPopper.hide();
						// console.log('hiding?')
					});
				} else {
					// something went wrong, fix it
					itemsArr[event.item].popover = false;
					console.log('recreating');
				}

			}
			// console.log(event, event.event.target, itemsArr[event.item]);
		});

	}

	//temp

	// DOM element where the Timeline will be attached
	

	// Create a DataSet (allows two way data-binding)
	// var items = new vis.DataSet([
	// 	{id: 1, content: 'item 1', start: '2014-04-20'},
	// 	{id: 2, content: 'item 2', start: '2014-04-14'},
	// 	{id: 3, content: 'item 3', start: '2014-04-18'},
	// 	{id: 4, content: 'item 4', start: '2014-04-16', end: '2014-04-19'},
	// 	{id: 5, content: 'item 5', start: '2014-04-25'},
	// 	{id: 6, content: 'item 6', start: '2014-04-27', type: 'point'}
	// ]);

	// Configuration for the Timeline
	// var options = {};

	// Create a Timeline
	// var timeline = new vis.Timeline(container, items, options);


	fetch('sanatizedCombinedData.json').then(resp => resp.json()).then(buildPage);
}())